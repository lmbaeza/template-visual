{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/silver/greedy-sorting",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"greedy-sorting\", title = \"Greedy Algorithms with Sorting\", author = \"Darren Yao\", redirects = [\"/silver/greedy\"], prerequisites = [\"intro-greedy\", \"two-pointers\", \"intro-sorted-sets\"], description = \"Solving greedy problems by sorting the input.\", frequency = 3;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    Spoiler: _missingComponent(\"Spoiler\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\"),\n    Problems: _missingComponent(\"Problems\")\n  }, _props.components), {Resources, Resource, HeaderLink, MATHSPAN, FocusProblem, Spoiler, MATHDIV, LanguageSection, CPPSection, JavaSection, PySection, Problems, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [_jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"IUSACO\",\n        title: \"9 - Greedy Algorithms\",\n        children: _jsx(_components.p, {\n          children: \"Module is based off this.\"\n        })\n      }), _jsx(Resource, {\n        source: \"CPH\",\n        title: \"6 - Greedy Algorithms\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"Scheduling, Tasks & Deadlines, Huffman Coding\"\n        })\n      }), _jsx(Resource, {\n        source: \"PAPS\",\n        title: \"8 - Greedy Algorithms\",\n        children: _jsx(_components.p, {\n          children: \"DAGs, Scheduling\"\n        })\n      }), _jsx(Resource, {\n        source: \"CPC\",\n        title: \"5 - Greedy Algorithms\",\n        url: \"05_greedy_algorithms\",\n        children: _jsx(_components.p, {\n          children: \"slides from Intro to Algorithms\"\n        })\n      })]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Usually, when using a greedy algorithm, there is a \", _jsx(_components.strong, {\n        children: \"value function\"\n      }), \" that\\ndetermines which choice is considered most optimal. For example, we often want\\nto maximize or minimize a certain quantity, so we take the largest or smallest\\npossible value in the next step.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here, we'll focus on problems where some sorting step is involved.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"example---studying-algorithms\",\n      children: [_jsx(_components.a, {\n        href: \"#example---studying-algorithms\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Example - Studying Algorithms\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Steph wants to improve her knowledge of algorithms over winter break. She has a\\ntotal of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"X\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\\\"application/x-tex\\\">X</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07847em;\\\">X</span></span></span></span>\"\n      }), \" (\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1 \\\\leq X \\\\leq 10^4\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>X</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">1 \\\\leq X \\\\leq 10^4</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8193em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07847em;\\\">X</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">4</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \") minutes to dedicate to learning algorithms.\\nThere are \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"N\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n      }), \" (\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1 \\\\leq N \\\\leq 100\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1 \\\\leq N \\\\leq 100</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8193em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">100</span></span></span></span>\"\n      }), \") algorithms, and each one of them requires\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"a_i\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\\\"application/x-tex\\\">a_i</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.5806em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" (\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1 \\\\leq a_i \\\\leq 100\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1 \\\\leq a_i \\\\leq 100</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.786em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">≤</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">100</span></span></span></span>\"\n      }), \") minutes to learn. Find the maximum number of\\nalgorithms she can learn.\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"studyalgo\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"solution---studying-algorithms\",\n      children: [_jsx(_components.a, {\n        href: \"#solution---studying-algorithms\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Solution - Studying Algorithms\"]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Solution\",\n      children: [_jsx(_components.p, {\n        children: \"The first observation we make is that Steph should prioritize learning\\nalgorithms from easiest to hardest; in other words, start with learning the\\nalgorithm that requires the least amount of time, and then choose further\\nalgorithms in increasing order of time required. Let's look at the following\\nexample:\"\n      }), _jsx(MATHDIV, {\n        className: \"math math-display\",\n        latex: \"X = 15, \\\\qquad N = 6, \\\\qquad a_i = \\\\{ 4, 3, 8, 4, 7, 3 \\\\}\",\n        children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><mi>X</mi><mo>=</mo><mn>15</mn><mo separator=\\\"true\\\">,</mo><mspace width=\\\"2em\\\"/><mi>N</mi><mo>=</mo><mn>6</mn><mo separator=\\\"true\\\">,</mo><mspace width=\\\"2em\\\"/><msub><mi>a</mi><mi>i</mi></msub><mo>=</mo><mo stretchy=\\\"false\\\">{</mo><mn>4</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>8</mn><mo separator=\\\"true\\\">,</mo><mn>4</mn><mo separator=\\\"true\\\">,</mo><mn>7</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo stretchy=\\\"false\\\">}</mo></mrow><annotation encoding=\\\"application/x-tex\\\">X = 15, \\\\qquad N = 6, \\\\qquad a_i = \\\\{ 4, 3, 8, 4, 7, 3 \\\\}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07847em;\\\">X</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8778em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\">15</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:2em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8389em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\">6</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:2em;\\\"></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\">a</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3117em;\\\"><span style=\\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">{</span><span class=\\\"mord\\\">4</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">8</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">4</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">7</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">}</span></span></span></span></span>\"\n      }), _jsxs(_components.p, {\n        children: [\"After sorting the array, we have \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\{ 3, 3, 4, 4, 7, 8 \\\\}\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">{</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>4</mn><mo separator=\\\"true\\\">,</mo><mn>4</mn><mo separator=\\\"true\\\">,</mo><mn>7</mn><mo separator=\\\"true\\\">,</mo><mn>8</mn><mo stretchy=\\\"false\\\">}</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\{ 3, 3, 4, 4, 7, 8 \\\\}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">{</span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">4</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">4</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">7</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">8</span><span class=\\\"mclose\\\">}</span></span></span></span>\"\n        }), \". Within the maximum of\\n15 minutes, Steph can learn four algorithms in a total of \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"3+3+4+4 = 14\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>3</mn><mo>+</mo><mn>3</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>4</mn><mo>=</mo><mn>14</mn></mrow><annotation encoding=\\\"application/x-tex\\\">3+3+4+4 = 14</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7278em;vertical-align:-0.0833em;\\\"></span><span class=\\\"mord\\\">4</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">+</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">4</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">14</span></span></span></span>\"\n        }), \"\\nminutes.\"]\n      }), _jsxs(_components.p, {\n        children: [\"The implementation of this algorithm is very simple. We sort the array, and then\\ntake as many elements as possible while the sum of times of algorithms chosen so\\nfar is less than \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"X\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\\\"application/x-tex\\\">X</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.07847em;\\\">X</span></span></span></span>\"\n        }), \". Sorting the array takes \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\mathcal{O}(N \\\\log N)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N \\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \" time, and\\niterating through the array takes \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\mathcal{O}(N)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \" time, for a total time\\ncomplexity of \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"\\\\mathcal{O}(N \\\\log N)\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>N</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(N \\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n        }), \".\"]\n      }), _jsxs(LanguageSection, {\n        children: [_jsx(CPPSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"// read in the input, store the algorithms in a vector, algorithms\\nsort(algorithms.begin(), algorithms.end());\\nint count = 0; // number of minutes used so far\\nint i = 0;\\nwhile(i < N && count + algorithms[i] <= x){\\n\\t// while there is enough time, learn more algorithms\\n\\tcount += algorithms[i];\\n\\ti++;\\n}\\ncout << i << endl; // print the ans\\n\"\n            })\n          })\n        }), _jsx(JavaSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"// read in the input, store the algorithms in int[] algorithms\\nArrays.sort(algorithms);\\nint count = 0; // number of minutes used so far\\nint i = 0;\\nwhile(i < N && count + algorithms[i] <= x){\\n\\t// while there is enough time, learn more algorithms\\n\\tcount += algorithms[i];\\n\\ti++;\\n}\\npw.println(i); // print the ans\\npw.close();\\n\"\n            })\n          })\n        }), _jsx(PySection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-python\",\n              children: \"# read in the input, store the algorithms in a list, algorithms\\nalgorithms.sort();\\ncount = 0 # number of minutes used so far\\ni = 0\\nwhile i < N and count + algorithms[i] <= x:\\n\\t# while there is enough time, learn more algorithms\\n\\tcount += algorithms[i]\\n\\ti+=1\\nprint(i) # print the ans\\n\"\n            })\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"example---the-scheduling-problem\",\n      children: [_jsx(_components.a, {\n        href: \"#example---the-scheduling-problem\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Example - The Scheduling Problem\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"movie\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There are \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"N\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n      }), \" events, each described by their starting and ending times. You can\\nonly attend one event at a time, and if you choose to attend an event, you must\\nattend the entire event. Traveling between events is instantaneous. What's the\\nmaximum number of events you can attend?\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"bad-greedy---earliest-starting-next-event\",\n      children: [_jsx(_components.a, {\n        href: \"#bad-greedy---earliest-starting-next-event\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Bad Greedy - Earliest Starting Next Event\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"One possible ordering for a greedy algorithm would always select the next\\npossible event that begins as soon as possible. Let's look at the following\\nexample, where the selected events are highlighted in red:\"\n    }), \"\\n\", _jsxs(\"svg\", {\n      viewBox: \"0 0 200 40\",\n      children: [_jsx(\"line\", {\n        x1: \"10\",\n        y1: \"5\",\n        x2: \"80\",\n        y2: \"5\",\n        style: {\n          stroke: 'rgb(255,0,0)',\n          strokeWidth: 1\n        }\n      }), _jsx(\"line\", {\n        x1: \"40\",\n        y1: \"15\",\n        x2: \"120\",\n        y2: \"15\",\n        style: {\n          strokeWidth: 1\n        },\n        className: \"stroke-current text-black dark:text-gray-200\"\n      }), _jsx(\"line\", {\n        x1: \"110\",\n        y1: \"25\",\n        x2: \"180\",\n        y2: \"25\",\n        style: {\n          stroke: 'rgb(255,0,0)',\n          strokeWidth: 1\n        }\n      }), _jsx(\"line\", {\n        x1: \"150\",\n        y1: \"35\",\n        x2: \"180\",\n        y2: \"35\",\n        style: {\n          strokeWidth: 1\n        },\n        className: \"stroke-current text-black dark:text-gray-200\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this example, the greedy algorithm selects two events, which is optimal.\\nHowever, this doesn't always work, as shown by the following counterexample:\"\n    }), \"\\n\", _jsxs(\"svg\", {\n      viewBox: \"0 0 200 40\",\n      children: [_jsx(\"line\", {\n        x1: \"10\",\n        y1: \"5\",\n        x2: \"160\",\n        y2: \"5\",\n        style: {\n          stroke: 'rgb(255,0,0)',\n          strokeWidth: 1\n        }\n      }), _jsx(\"line\", {\n        x1: \"40\",\n        y1: \"15\",\n        x2: \"80\",\n        y2: \"15\",\n        style: {\n          strokeWidth: 1\n        },\n        className: \"stroke-current text-black dark:text-gray-200\"\n      }), _jsx(\"line\", {\n        x1: \"100\",\n        y1: \"25\",\n        x2: \"135\",\n        y2: \"25\",\n        style: {\n          strokeWidth: 1\n        },\n        className: \"stroke-current text-black dark:text-gray-200\"\n      }), _jsx(\"line\", {\n        x1: \"150\",\n        y1: \"35\",\n        x2: \"180\",\n        y2: \"35\",\n        style: {\n          strokeWidth: 1\n        },\n        className: \"stroke-current text-black dark:text-gray-200\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this case, the greedy algorithm selects to attend only one event. However,\\nthe optimal solution would be the following:\"\n    }), \"\\n\", _jsxs(\"svg\", {\n      viewBox: \"0 0 200 40\",\n      children: [_jsx(\"line\", {\n        x1: \"10\",\n        y1: \"5\",\n        x2: \"160\",\n        y2: \"5\",\n        style: {\n          strokeWidth: 1\n        },\n        className: \"stroke-current text-black dark:text-gray-200\"\n      }), _jsx(\"line\", {\n        x1: \"40\",\n        y1: \"15\",\n        x2: \"80\",\n        y2: \"15\",\n        style: {\n          stroke: 'rgb(255,0,0)',\n          strokeWidth: 1\n        }\n      }), _jsx(\"line\", {\n        x1: \"100\",\n        y1: \"25\",\n        x2: \"135\",\n        y2: \"25\",\n        style: {\n          stroke: 'rgb(255,0,0)',\n          strokeWidth: 1\n        }\n      }), _jsx(\"line\", {\n        x1: \"150\",\n        y1: \"35\",\n        x2: \"180\",\n        y2: \"35\",\n        style: {\n          stroke: 'rgb(255,0,0)',\n          strokeWidth: 1\n        }\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"correct-greedy---earliest-ending-next-event\",\n      children: [_jsx(_components.a, {\n        href: \"#correct-greedy---earliest-ending-next-event\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Correct Greedy - Earliest Ending Next Event\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Instead, we can select the event that ends as early as possible. This correctly\\nselects the three events.\"\n    }), \"\\n\", _jsxs(\"svg\", {\n      viewBox: \"0 0 200 40\",\n      children: [_jsx(\"line\", {\n        x1: \"10\",\n        y1: \"5\",\n        x2: \"160\",\n        y2: \"5\",\n        style: {\n          strokeWidth: 1\n        },\n        className: \"stroke-current text-black dark:text-gray-200\"\n      }), _jsx(\"line\", {\n        x1: \"40\",\n        y1: \"15\",\n        x2: \"80\",\n        y2: \"15\",\n        style: {\n          stroke: 'rgb(255,0,0)',\n          strokeWidth: 1\n        }\n      }), _jsx(\"line\", {\n        x1: \"100\",\n        y1: \"25\",\n        x2: \"135\",\n        y2: \"25\",\n        style: {\n          stroke: 'rgb(255,0,0)',\n          strokeWidth: 1\n        }\n      }), _jsx(\"line\", {\n        x1: \"150\",\n        y1: \"35\",\n        x2: \"180\",\n        y2: \"35\",\n        style: {\n          stroke: 'rgb(255,0,0)',\n          strokeWidth: 1\n        }\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In fact, this algorithm always works. A brief explanation of correctness is as\\nfollows. If we have two events \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \", with \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" ending later than\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \", then it is always optimal to select \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \". This is because selecting\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" gives us more choices for future events. If we can select an event to go\\nafter \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \", then that event can also go after \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \", because \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" ends first.\\nThus, the set of events that can go after \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_2\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_2</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" is a subset of the events that\\ncan go after \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \", making \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"E_1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding=\\\"application/x-tex\\\">E_1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8333em;vertical-align:-0.15em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05764em;\\\">E</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.3011em;\\\"><span style=\\\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">1</span></span></span></span><span class=\\\"vlist-s\\\">​</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.15em;\\\"><span></span></span></span></span></span></span></span></span></span>\"\n      }), \" the optimal choice.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For the following code, let's say we have the array \", _jsx(_components.code, {\n        children: \"events\"\n      }), \" of events, which\\neach contain a start and an end point.\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.p, {\n          children: [\"We'll be using the C++ built in container pair to store each event. Note that\\nsince the standard sort in C++ sorts by first element, we will store each event\\nas \", _jsx(_components.code, {\n            children: \"pair<end, start>\"\n          }), \".\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"// read in the input, store the events in pair<int, int>[] events.\\nsort(events, events + n); // sorts by first element (ending time)\\nint currentEventEnd = -1; // end of event currently attending\\nint ans = 0; // how many events were attended?\\nfor(int i = 0; i < n; i++){ // process events in order of end time\\n\\tif(events[i].second >= currentEventEnd){ // if event can be attended\\n\\t// we know that this is the earliest ending event that we can attend\\n\\t// because of how the events are sorted\\n\\t\\tcurrentEventEnd = events[i].first;\\n\\t\\tans++;\\n\\t}\\n}\\ncout << ans << endl;\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsx(_components.p, {\n          children: \"We'll be using the following static class to store each event:\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"static class Event implements Comparable<Event>{\\n\\tint start; int end;\\n\\tpublic Event(int s, int e){\\n\\t\\tstart = s; end = e;\\n\\t}\\n\\tpublic int compareTo(Event e){\\n\\t\\treturn Integer.compare(this.end, e.end);\\n\\t}\\n}\\n\"\n          })\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"// read in the input, store the events in Event[] events.\\nArrays.sort(events); // sorts by comparator we defined above\\nint currentEventEnd = -1; // end of event currently attending\\nint ans = 0; // how many events were attended?\\nfor(int i = 0; i < n; i++){ // process events in order of end time\\n\\tif(events[i].start >= currentEventEnd){ // if event can be attended\\n\\t// we know that this is the earliest ending event that we can attend\\n\\t// because of how the events are sorted\\n\\t\\tcurrentEventEnd = events[i].end;\\n\\t\\tans++;\\n\\t}\\n}\\npw.println(ans);\\npw.close();\\n\"\n          })\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsx(_components.p, {\n          children: \"We'll be using a list of list to store the events.\"\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            children: \"# read in the input, store the events in [begin, end] format in list events.\\nevents.sort(key=lambda x:x[1]); # sorts by second element (ending time)\\ncurrentEventEnd = -1\\nans = 0 # how many events were attended?\\nfor i in range(n): # process events in order of end time\\n\\tif events[i][0] >= currentEventEnd: # if event can be attended\\n\\t\\t# we know that this is the earliest ending event that we can attend\\n\\t\\t# because of how the events are sorted\\n\\t\\tcurrentEventEnd = events[i][1]\\n\\t\\tans+=1\\nprint(ans)\\n\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"when-greedy-fails\",\n      children: [_jsx(_components.a, {\n        href: \"#when-greedy-fails\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"When Greedy Fails\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We'll provide a few common examples of when greedy fails, so that you can avoid\\nfalling into obvious traps and wasting time getting wrong answers in contest.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"coin-change\",\n      children: [_jsx(_components.a, {\n        href: \"#coin-change\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Coin Change\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This problem gives several coin denominations, and asks for the minimum number\\nof coins needed to make a certain value. Greedy algorithms can be used to solve\\nthis problem only in very specific cases (it can be proven that it works for the\\nAmerican as well as the Euro coin systems). However, it doesn't work in the\\ngeneral case. For example, let the coin denominations be \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\{1, 3, 4\\\\}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">{</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>4</mn><mo stretchy=\\\"false\\\">}</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\{1, 3, 4\\\\}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">{</span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">4</span><span class=\\\"mclose\\\">}</span></span></span></span>\"\n      }), \", and say\\nthe value we want is 6. The optimal solution is \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\{3, 3\\\\}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">{</mo><mn>3</mn><mo separator=\\\"true\\\">,</mo><mn>3</mn><mo stretchy=\\\"false\\\">}</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\{3, 3\\\\}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">{</span><span class=\\\"mord\\\">3</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">3</span><span class=\\\"mclose\\\">}</span></span></span></span>\"\n      }), \", which requires only\\ntwo coins, but the greedy method of taking the highest possible valued coin that\\nfits in the remaining denomination gives the solution \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\{4, 1, 1\\\\}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">{</mo><mn>4</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo stretchy=\\\"false\\\">}</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\{4, 1, 1\\\\}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">{</span><span class=\\\"mord\\\">4</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">}</span></span></span></span>\"\n      }), \", which is\\nincorrect.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"knapsack\",\n      children: [_jsx(_components.a, {\n        href: \"#knapsack\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Knapsack\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The knapsack problem gives a number of items, each having a \", _jsx(_components.strong, {\n        children: \"weight\"\n      }), \" and a\\n\", _jsx(_components.strong, {\n        children: \"value\"\n      }), \", and we want to choose a subset of these items. We are limited to a\\ncertain weight, and we want to maximize the value of the items that we take.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's take the following example, where we have a maximum capacity of 4:\"\n    }), \"\\n\", _jsxs(\"center\", {\n      children: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Item\"\n            }), _jsx(_components.th, {\n              children: \"Weight\"\n            }), _jsx(_components.th, {\n              children: \"Value\"\n            }), _jsx(_components.th, {\n              children: \"Value Per Weight\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: \"A\"\n            }), _jsx(_components.td, {\n              children: \"3\"\n            }), _jsx(_components.td, {\n              children: \"18\"\n            }), _jsx(_components.td, {\n              children: \"6\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: \"B\"\n            }), _jsx(_components.td, {\n              children: \"2\"\n            }), _jsx(_components.td, {\n              children: \"10\"\n            }), _jsx(_components.td, {\n              children: \"5\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: \"C\"\n            }), _jsx(_components.td, {\n              children: \"2\"\n            }), _jsx(_components.td, {\n              children: \"10\"\n            }), _jsx(_components.td, {\n              children: \"5\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If we use greedy based on highest value first, we choose item A and then we are\\ndone, as we don't have remaining weight to fit either of the other two. Using\\ngreedy based on value per weight again selects item A and then quits. However,\\nthe optimal solution is to select items B and C, as they combined have a higher\\nvalue than item A alone. In fact, there is no working greedy solution. The\\nsolution to this problem uses \", _jsx(_components.strong, {\n        children: \"dynamic programming\"\n      }), \", which is covered in gold.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"cses\",\n      children: [_jsx(_components.a, {\n        href: \"#cses\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"CSES\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"cses\",\n      hideSuggestProblemButton: true\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"other\",\n      children: [_jsx(_components.a, {\n        href: \"#other\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Other\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"other\",\n      hideSuggestProblemButton: true\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  title,\n  author,\n  redirects,\n  prerequisites,\n  description,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"Greedy Algorithms with Sorting","author":"Darren Yao","contributors":null,"id":"greedy-sorting","prerequisites":["intro-greedy","two-pointers","intro-sorted-sets"],"description":"Solving greedy problems by sorting the input.","frequency":3},"parent":{"name":"Greedy_Sorting","relativePath":"3_Silver/Greedy_Sorting.mdx"},"fields":{"division":"silver"},"toc":{"cpp":[{"depth":2,"value":"Example - Studying Algorithms","slug":"example---studying-algorithms"},{"depth":3,"value":"Solution - Studying Algorithms","slug":"solution---studying-algorithms"},{"depth":2,"value":"Example - The Scheduling Problem","slug":"example---the-scheduling-problem"},{"depth":3,"value":"Bad Greedy - Earliest Starting Next Event","slug":"bad-greedy---earliest-starting-next-event"},{"depth":3,"value":"Correct Greedy - Earliest Ending Next Event","slug":"correct-greedy---earliest-ending-next-event"},{"depth":2,"value":"When Greedy Fails","slug":"when-greedy-fails"},{"depth":3,"value":"Coin Change","slug":"coin-change"},{"depth":3,"value":"Knapsack","slug":"knapsack"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":3,"value":"CSES","slug":"cses"},{"depth":3,"value":"Other","slug":"other"}],"java":[{"depth":2,"value":"Example - Studying Algorithms","slug":"example---studying-algorithms"},{"depth":3,"value":"Solution - Studying Algorithms","slug":"solution---studying-algorithms"},{"depth":2,"value":"Example - The Scheduling Problem","slug":"example---the-scheduling-problem"},{"depth":3,"value":"Bad Greedy - Earliest Starting Next Event","slug":"bad-greedy---earliest-starting-next-event"},{"depth":3,"value":"Correct Greedy - Earliest Ending Next Event","slug":"correct-greedy---earliest-ending-next-event"},{"depth":2,"value":"When Greedy Fails","slug":"when-greedy-fails"},{"depth":3,"value":"Coin Change","slug":"coin-change"},{"depth":3,"value":"Knapsack","slug":"knapsack"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":3,"value":"CSES","slug":"cses"},{"depth":3,"value":"Other","slug":"other"}],"py":[{"depth":2,"value":"Example - Studying Algorithms","slug":"example---studying-algorithms"},{"depth":3,"value":"Solution - Studying Algorithms","slug":"solution---studying-algorithms"},{"depth":2,"value":"Example - The Scheduling Problem","slug":"example---the-scheduling-problem"},{"depth":3,"value":"Bad Greedy - Earliest Starting Next Event","slug":"bad-greedy---earliest-starting-next-event"},{"depth":3,"value":"Correct Greedy - Earliest Ending Next Event","slug":"correct-greedy---earliest-ending-next-event"},{"depth":2,"value":"When Greedy Fails","slug":"when-greedy-fails"},{"depth":3,"value":"Coin Change","slug":"coin-change"},{"depth":3,"value":"Knapsack","slug":"knapsack"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":3,"value":"CSES","slug":"cses"},{"depth":3,"value":"Other","slug":"other"}]}},"moduleProblemLists":{"problemLists":[{"listId":"studyalgo","problems":[{"uniqueId":"cfgym-102951B","name":"Studying Algorithms","url":"https://codeforces.com/gym/102951/problem/B","source":"CF","difficulty":"Very Easy","isStarred":false,"tags":["Sorting","Greedy"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}}]},{"listId":"movie","problems":[{"uniqueId":"cses-1629","name":"Movie Festival","url":"https://cses.fi/problemset/task/1629","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Sorting","Greedy"],"solution":null}]},{"listId":"cses","problems":[{"uniqueId":"cses-1074","name":"Stick Lengths","url":"https://cses.fi/problemset/task/1074","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Median"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-1084","name":"Apartments","url":"https://cses.fi/problemset/task/1084","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Sorting"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-1090","name":"Ferris Wheel","url":"https://cses.fi/problemset/task/1090","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Greedy","Sorting","2P"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-1630","name":"Tasks & Deadlines","url":"https://cses.fi/problemset/task/1630","source":"CSES","difficulty":"Easy","isStarred":true,"tags":["Greedy","Sorting"],"solution":{"kind":"link","label":"CPH 6.3","labelTooltip":null,"url":"/CPH.pdf#page=70","sketch":null}},{"uniqueId":"cses-1073","name":"Towers","url":"https://cses.fi/problemset/task/1073","source":"CSES","difficulty":"Easy","isStarred":true,"tags":["Sorted Set","Greedy","LIS","Binary Search"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-1632","name":"Movie Festival II","url":"https://cses.fi/problemset/task/1632","source":"CSES","difficulty":"Normal","isStarred":true,"tags":["Sorting","Sorted Set","Greedy"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-1161","name":"Stick Division","url":"https://cses.fi/problemset/task/1161","source":"CSES","difficulty":"Hard","isStarred":false,"tags":["Greedy","Sorted Set"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]},{"listId":"other","problems":[{"uniqueId":"cf-762B","name":"USB vs. PS/2","url":"https://codeforces.com/contest/762/problem/B","source":"CF","difficulty":"Easy","isStarred":false,"tags":["Greedy","Sorting","2P"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-835","name":"Lemonade Line","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=835","source":"Silver","difficulty":"Easy","isStarred":false,"tags":["Greedy","Sorting"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-571","name":"High Card Wins","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=571","source":"Silver","difficulty":"Easy","isStarred":false,"tags":["Greedy","Sorting","Sorted Set"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-573","name":"High Card Low Card","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=573","source":"Gold","difficulty":"Easy","isStarred":true,"tags":["Greedy","Sorting","Sorted Set"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-1158A","name":"The Party and Sweets","url":"https://codeforces.com/problemset/problem/1158/A","source":"CF","difficulty":"Easy","isStarred":false,"tags":["Sorting","Greedy"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-714","name":"Why Did the Cow Cross the Road","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=714","source":"Silver","difficulty":"Normal","isStarred":false,"tags":["Greedy","Sorted Set"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-990","name":"Berry Picking","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=990","source":"Silver","difficulty":"Normal","isStarred":false,"tags":["Sorting","Greedy"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-321B","name":"Ciel and Duel","url":"https://codeforces.com/contest/321/problem/B","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Greedy"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"usaco-1158","name":"Closest Cow Wins","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=1158","source":"Silver","difficulty":"Hard","isStarred":false,"tags":["Sorting","Greedy","2P"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_prob1_silver_dec21.html","sketch":null}}]}]}},"pageContext":{"id":"greedy-sorting"}},
    "staticQueryHashes": ["3245546052","3813215756","745520438"]}