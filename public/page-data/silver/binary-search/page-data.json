{
    "componentChunkName": "component---src-templates-module-template-tsx",
    "path": "/silver/binary-search",
    "result": {"data":{"xdm":{"body":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*process numbers from left to right, keep track of the last element of each block and use binary search of lower_bound to find which block the current numbers belongs*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _missingComponent(name) {\n  return function () {\n    throw new Error(\"Component `\" + name + \"` was not imported, exported, or given\");\n  };\n}\nconst id = \"binary-search\", redirects = [\"/silver/binary-search-sorted\", \"/silver/binary-search-ans\"], title = \"Binary Search\", author = \"Darren Yao, Abutalib Namazov, Andrew Wang, Qi Wang, Dustin Miao\", prerequisites = [\"greedy-sorting\"], description = \"Binary searching on arbitrary monotonic functions and built-in functions for binary search.\", frequency = 3;\nfunction MDXContent(_props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    code: \"code\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    h4: \"h4\",\n    strong: \"strong\",\n    HeaderLink: _missingComponent(\"HeaderLink\"),\n    Resources: _missingComponent(\"Resources\"),\n    Resource: _missingComponent(\"Resource\"),\n    Youtube: _missingComponent(\"Youtube\"),\n    MATHSPAN: _missingComponent(\"MATHSPAN\"),\n    LanguageSection: _missingComponent(\"LanguageSection\"),\n    CPPSection: _missingComponent(\"CPPSection\"),\n    JavaSection: _missingComponent(\"JavaSection\"),\n    PySection: _missingComponent(\"PySection\"),\n    FocusProblem: _missingComponent(\"FocusProblem\"),\n    Spoiler: _missingComponent(\"Spoiler\"),\n    MATHDIV: _missingComponent(\"MATHDIV\"),\n    Problems: _missingComponent(\"Problems\"),\n    Quiz: _missingComponent(\"Quiz\")\n  }, _props.components), {HeaderLink, Resources, Resource, Youtube, MATHSPAN, LanguageSection, CPPSection, JavaSection, PySection, FocusProblem, Spoiler, MATHDIV, Problems, Quiz, wrapper: MDXLayout} = _components;\n  const _content = _jsxs(_Fragment, {\n    children: [\"\\n\", _jsxs(_components.h2, {\n      id: \"introduction\",\n      children: [_jsx(_components.a, {\n        href: \"#introduction\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Introduction\"]\n    }), \"\\n\", _jsxs(Resources, {\n      children: [_jsx(Resource, {\n        source: \"CSA\",\n        title: \"Binary Search\",\n        url: \"binary_search\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"animation, code, lower_bound + upper_bound\"\n        })\n      }), _jsx(Resource, {\n        source: \"CPH\",\n        title: \"3.3 - Binary Search\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"code, lower_bound + upper_bound, some applications\"\n        })\n      }), _jsx(Resource, {\n        source: \"CF\",\n        title: \"EDU: Binary Search - Steps 1, 2\",\n        url: \"https://codeforces.com/edu/course/2/lesson/6/1/practice\",\n        starred: true,\n        children: _jsx(_components.p, {\n          children: \"videos, problems similar to those covered in this module\"\n        })\n      }), _jsx(Resource, {\n        source: \"KA@KhanAcademy\",\n        title: \"Binary Search\",\n        url: \"https://www.khanacademy.org/computing/computer-science/algorithms/binary-search/a/binary-search\",\n        children: _jsx(_components.p, {\n          children: \"plenty of diagrams, javascript implementation\"\n        })\n      }), _jsx(Resource, {\n        source: \"IUSACO\",\n        title: \"12 - Binary Search\",\n        children: _jsx(_components.p, {\n          children: \"module is based off this\"\n        })\n      }), _jsx(Resource, {\n        source: \"TC\",\n        title: \"Binary Search\",\n        url: \"binary-search\",\n        children: _jsx(_components.p, {\n          children: \"similar material\"\n        })\n      }), _jsx(Resource, {\n        source: \"LC\",\n        title: \"Python Ultimate Binary Search Template\",\n        url: \"https://leetcode.com/discuss/general-discussion/786126/python-powerful-ultimate-binary-search-template-solved-many-problems\",\n        children: _jsx(_components.p, {\n          children: \"many problems & applications\"\n        })\n      })]\n    }), \"\\n\", _jsx(Youtube, {\n      id: \"GU7DpgHINWQ\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When we binary search on an answer, we start with a search space of size \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"N\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\\"application/x-tex\\\">N</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6833em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span></span></span></span>\"\n      }), \"\\nwhich we know the answer lies in. Then each iteration of the binary search cuts\\nthe search space in half, so the algorithm tests \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" values.\\nThis is efficient and much better than testing each possible value in the search\\nspace.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"binary-searching-on-monotonic-functions\",\n      children: [_jsx(_components.a, {\n        href: \"#binary-searching-on-monotonic-functions\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Binary Searching on Monotonic Functions\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's say we have a boolean function \", _jsx(_components.code, {\n        children: \"f(x)\"\n      }), \". Usually, in such problems, we want\\nto find the maximum or minimum value of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"x\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n      }), \" such that \", _jsx(_components.code, {\n        children: \"f(x)\"\n      }), \" is true. Similarly\\nto how binary search on an array only works on a sorted array, binary search on\\nthe answer only works if the answer function is\\n\", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Monotonic_function\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"monotonic\"\n      }), \", meaning that it\\nis always non-decreasing or always non-increasing.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"finding-the-maximum-x-such-that-fx--true\",\n      children: [_jsx(_components.a, {\n        href: \"#finding-the-maximum-x-such-that-fx--true\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Finding The Maximum \", _jsx(_components.code, {\n        children: \"x\"\n      }), \" Such That \", _jsx(_components.code, {\n        children: \"f(x) = true\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We want to construct a function \", _jsx(_components.code, {\n        children: \"lastTrue\"\n      }), \" such that \", _jsx(_components.code, {\n        children: \"lastTrue(lo, hi, f)\"\n      }), \"\\nreturns the last \", _jsx(_components.code, {\n        children: \"x\"\n      }), \" in the range \", _jsx(_components.code, {\n        children: \"[lo,hi]\"\n      }), \" such that \", _jsx(_components.code, {\n        children: \"f(x) = true\"\n      }), \". If no such\\n\", _jsx(_components.code, {\n        children: \"x\"\n      }), \" exists, then \", _jsx(_components.code, {\n        children: \"lastTrue\"\n      }), \" should return \", _jsx(_components.code, {\n        children: \"lo-1\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This can be done with binary search if \", _jsx(_components.code, {\n        children: \"f(x)\"\n      }), \" satisfies both of the following\\nconditions:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"If \", _jsx(_components.code, {\n          children: \"f(x) = true\"\n        }), \", then \", _jsx(_components.code, {\n          children: \"f(y) = true\"\n        }), \" for all \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"y \\\\leq x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>y</mi><mo>‚â§</mo><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">y \\\\leq x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8304em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">‚â§</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"If \", _jsx(_components.code, {\n          children: \"f(x) = false\"\n        }), \", then \", _jsx(_components.code, {\n          children: \"f(y) = false\"\n        }), \" for all \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"y \\\\geq x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>y</mi><mo>‚â•</mo><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">y \\\\geq x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8304em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">‚â•</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For example, if \", _jsx(_components.code, {\n        children: \"f(x)\"\n      }), \" is given by the following function:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"f(1) = true\\nf(2) = true\\nf(3) = true\\nf(4) = true\\nf(5) = true\\nf(6) = false\\nf(7) = false\\nf(8) = false\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"then \", _jsx(_components.code, {\n        children: \"lastTrue(1, 8, f) = 5\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"lastTrue(7, 8, f) = 6\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"implementation-1\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation-1\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation 1\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Verify that this implementation doesn't call \", _jsx(_components.code, {\n        children: \"f\"\n      }), \" on any values outside of the\\nrange \", _jsx(_components.code, {\n        children: \"[lo,hi]\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\nusing namespace std;\\n\\nint lastTrue(int lo, int hi, function<bool(int)> f) {\\n\\t// if none of the values in the range work, return lo - 1\\n\\tlo--;\\n\\twhile (lo < hi) {\\n\\t\\t// find the middle of the current range (rounding up)\\n\\t\\tint mid = lo + (hi - lo + 1) / 2;\\n\\t\\tif (f(mid)) {\\n\\t\\t\\t// if mid works, then all numbers smaller than mid also work\\n\\t\\t\\tlo = mid;\\n\\t\\t} else {\\n\\t\\t\\t// if mid does not work, greater values would not work either\\n\\t\\t\\thi = mid - 1;\\n\\t\\t}\\n\\t}\\n\\treturn lo;\\n}\\n\\nint main() {\\n\\t// all numbers satisfy the condition\\n\\tcout << lastTrue(2, 10, [] (int x) { return true; }) << \\\"\\\\n\\\";  // outputs 10\\n\\t\\n\\tcout << lastTrue(2, 10, [] (int x) { return x * x <= 30; }) << \\\"\\\\n\\\";  // outputs 5\\n\\n\\t// no numbers satisfy the condition\\n\\tcout << lastTrue(2, 10, [] (int x) { return false; }) << \\\"\\\\n\\\";  // outputs 1\\n}\\n\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"See \", _jsx(_components.a, {\n            href: \"/general/lambda\",\n            children: \"Lambda Expressions\"\n          }), \" if you're not familiar with the syntax\\nused in the main function.\"]\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.function.Predicate;\\n\\npublic class BinarySearch {\\n\\tpublic static void main(String[] args) {\\n\\t\\t// all numbers satisfy the condition\\n\\t\\tSystem.out.println(lastTrue(2, 10, (x) -> true));  // outputs 10\\n\\t\\t\\n\\t\\tSystem.out.println(lastTrue(2, 10, (x) -> x * x <= 30));  // outputs 5\\n\\t\\t\\n\\t\\t// no numbers satisfy the condition\\n\\t\\tSystem.out.println(lastTrue(2, 10, (x) -> false));  // outputs 1\\n\\t}\\n\\n\\tpublic static int lastTrue(int lo, int hi, Predicate<Integer> f) {\\n\\t\\t// if none of the values in the range work, return lo - 1\\n\\t\\tlo--;\\n\\t\\twhile (lo < hi) {\\n\\t\\t\\t// find the middle of the current range (rounding up)\\n\\t\\t\\tint mid = lo + (hi - lo + 1) / 2;\\n\\t\\t\\tif (f.test(mid)) {\\n\\t\\t\\t\\t// if mid works, then all numbers smaller than mid also work\\n\\t\\t\\t\\tlo = mid;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// if mid does not work, greater values would not work either\\n\\t\\t\\t\\thi = mid - 1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn lo;\\n\\t}\\n}\\n\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"See\\n\", _jsx(_components.a, {\n            href: \"https://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: \"Java Predicate Interface\"\n          }), \"\\nif you're not familiar with the \", _jsx(_components.code, {\n            children: \"Predicate\"\n          }), \" interface used.\"]\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            children: \"from typing import Callable\\n\\n\\ndef lastTrue(lo: int, hi: int, f: Callable[[int], bool]) -> int:\\n\\t\\\"\\\"\\\"\\n\\tBinary Search\\n\\t:param lo: lower bound\\n\\t:param hi: upper bound\\n\\t:param f: a function that returns whether a number is valid or not\\n\\t:return: the maximum x such that f(x) is true\\n\\t\\\"\\\"\\\"\\n\\t# if none of the values in the range work, return lo - 1\\n\\tlo -= 1\\n\\twhile lo < hi:\\n\\t\\t# find the middle of the current range (rounding up)\\n\\t\\tmid = lo + (hi - lo + 1) // 2\\n\\t\\tif f(mid):\\n\\t\\t\\t# if mid works, then all numbers smaller than mid also work\\n\\t\\t\\tlo = mid\\n\\t\\telse:\\n\\t\\t\\t# if mid does not work, greater values would not work too\\n\\t\\t\\t# so we exclude them\\n\\t\\t\\thi = mid - 1\\n\\treturn lo\\n\\n\\n# all numbers satisfy the condition\\nprint(lastTrue(2, 10, lambda x: True))  # outputs 10\\n\\nprint(lastTrue(2, 10, lambda x: x * x <= 30))  # outputs 5\\n\\n# no numbers satisfy the condition\\nprint(lastTrue(2, 10, lambda x: False)) #  outputs 1\\n\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"See \", _jsx(_components.a, {\n            href: \"https://www.w3schools.com/python/python_lambda.asp\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: \"Lambda Expressions\"\n          }), \" if\\nyou're not familiar with the syntax used in the program.\"]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"implementation-2\",\n      children: [_jsx(_components.a, {\n        href: \"#implementation-2\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Implementation 2\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This approach is based on interval jumping. Essentially, we start from the\\nbeginning of the array, make jumps, and reduce the jump length as we get closer\\nto the target element. We use powers of 2, very similiar to\\n\", _jsx(_components.a, {\n        href: \"/plat/bin-jump\",\n        children: \"Binary Jumping\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\nusing namespace std;\\n\\nint lastTrue(int lo, int hi, function<bool(int)> f) {\\n\\tlo--;\\n\\tfor (int dif = hi - lo; dif > 0; dif /= 2) {\\n\\t\\twhile (lo + dif <= hi && f(lo + dif)) {\\n\\t\\t\\tlo += dif;\\n\\t\\t}\\n\\t}\\n\\treturn lo;\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"public static int lastTrue(int lo, int hi, Predicate<Integer> f) {\\n\\tlo--;\\n\\tfor (int dif = hi - lo; dif > 0; dif /= 2) {\\n\\t\\twhile (lo + dif <= hi && f.test(lo + dif)) {\\n\\t\\t\\tlo += dif;\\n\\t\\t}\\n\\t}\\n\\treturn lo;\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"from typing import Callable\\n\\n\\ndef lastTrue(lo: int, hi: int, f: Callable[[int], bool]) -> int:\\n\\t\\\"\\\"\\\"\\n\\tBinary Search\\n\\t:param lo: lower bound\\n\\t:param hi: upper bound\\n\\t:param f: a function that returns whether a number is valid or not\\n\\t:return: the maximum x such that f(x) is true\\n\\t\\\"\\\"\\\"\\n\\tlo -= 1\\n\\tdif = hi - lo\\n\\twhile dif > 0:\\n\\t\\twhile lo + dif <= hi and f(lo + dif):\\n\\t\\t\\tlo += dif\\n\\t\\tdif //= 2\\n\\treturn lo\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"finding-the-minimum-x-such-that-fx--true\",\n      children: [_jsx(_components.a, {\n        href: \"#finding-the-minimum-x-such-that-fx--true\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Finding The Minimum \", _jsx(_components.code, {\n        children: \"x\"\n      }), \" Such That \", _jsx(_components.code, {\n        children: \"f(x) = true\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We want to construct a function \", _jsx(_components.code, {\n        children: \"firstTrue\"\n      }), \" such that \", _jsx(_components.code, {\n        children: \"firstTrue(lo, hi, f)\"\n      }), \"\\nreturns the first \", _jsx(_components.code, {\n        children: \"x\"\n      }), \" in the range \", _jsx(_components.code, {\n        children: \"[lo,hi]\"\n      }), \" such that \", _jsx(_components.code, {\n        children: \"f(x) = true\"\n      }), \". If no such\\n\", _jsx(_components.code, {\n        children: \"x\"\n      }), \" exists, then \", _jsx(_components.code, {\n        children: \"firstTrue\"\n      }), \" should return \", _jsx(_components.code, {\n        children: \"hi+1\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Similarly to the previous part, this can be done with binary search if \", _jsx(_components.code, {\n        children: \"f(x)\"\n      }), \"\\nsatisfies both of the following conditions:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"If \", _jsx(_components.code, {\n          children: \"f(x)\"\n        }), \" is true, then \", _jsx(_components.code, {\n          children: \"f(y)\"\n        }), \" is true for all \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"y \\\\geq x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>y</mi><mo>‚â•</mo><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">y \\\\geq x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8304em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">‚â•</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"If \", _jsx(_components.code, {\n          children: \"f(x)\"\n        }), \" is false, then \", _jsx(_components.code, {\n          children: \"f(y)\"\n        }), \" is false for all \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"y \\\\leq x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>y</mi><mo>‚â§</mo><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">y \\\\leq x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8304em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03588em;\\\">y</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">‚â§</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We will need to do the same thing, but when the condition is satisfied, we will\\ncut the right part, and when it's not, the left part will be cut.\"\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\nusing namespace std;\\n\\nint firstTrue(int lo, int hi, function<bool(int)> f) {\\n\\thi++;\\n\\twhile (lo < hi) {\\n\\t\\tint mid = lo + (hi - lo) / 2;\\n\\t\\tif (f(mid)) {\\n\\t\\t\\thi = mid;\\n\\t\\t} else {\\n\\t\\t\\tlo = mid + 1;\\n\\t\\t}\\n\\t}\\n\\treturn lo;\\n}\\n\\nint main() {\\n\\tcout << firstTrue(2, 10, [] (int x) { return true; }) << \\\"\\\\n\\\";  // outputs 2\\n\\tcout << firstTrue(2, 10, [] (int x) { return x * x >= 30; }) << \\\"\\\\n\\\";  // outputs 6\\n\\tcout << firstTrue(2, 10, [] (int x) { return false; }) << \\\"\\\\n\\\";  // outputs 11\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.function.Predicate;\\n\\npublic class BinarySearch {\\n\\tpublic static void main(String[] args) {\\n\\t\\tSystem.out.println(firstTrue(2, 10, (x) -> true));  // outputs 2\\n\\t\\tSystem.out.println(firstTrue(2, 10, (x) -> x * x >= 30));  // outputs 6\\n\\t\\tSystem.out.println(firstTrue(2, 10, (x) -> false));  // outputs 11\\n\\t}\\n\\n\\tpublic static int firstTrue(int lo, int hi, Predicate<Integer> f) {\\n\\t\\thi++;\\n\\t\\twhile (lo < hi) {\\n\\t\\t\\tint mid = lo + (hi - lo) / 2;\\n\\t\\t\\tif (f.test(mid)) {\\n\\t\\t\\t\\thi = mid;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tlo = mid + 1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn lo;\\n\\t}\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            children: \"from typing import Callable\\n\\n\\ndef firstTrue(lo: int, hi: int, f: Callable[[int], bool]) -> int:\\n\\thi += 1\\n\\twhile lo < hi:\\n\\t\\tmid = (lo + hi) // 2\\n\\t\\tif f(mid):\\n\\t\\t\\thi = mid\\n\\t\\telse:\\n\\t\\t\\tlo = mid + 1\\n\\treturn lo\\n\\n\\nprint(firstTrue(2, 10, lambda x: True))  # outputs 2\\nprint(firstTrue(2, 10, lambda x: x * x >= 30))  # outputs 6\\nprint(firstTrue(2, 10, lambda x: False))  # outputs 11\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"example---maximum-median\",\n      children: [_jsx(_components.a, {\n        href: \"#example---maximum-median\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Example - Maximum Median\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"ex\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Statement:\"\n      }), \" Given an array \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\texttt{arr}\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mtext mathvariant=\\\"monospace\\\">arr</mtext></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\texttt{arr}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span></span></span></span>\"\n      }), \" of \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"n\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n      }), \" integers, where \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"n\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n      }), \" is odd,\\nwe can perform the following operation on it \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \" times: take any element of the\\narray and increase it by \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n      }), \". We want to make the median of the array as large\\nas possible after \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"k\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n      }), \" operations.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Constraints:\"\n      }), \" \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"1 \\\\leq n \\\\leq 2 \\\\cdot 10^5, 1 \\\\leq k \\\\leq 10^9\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><mo>‚â§</mo><mi>n</mi><mo>‚â§</mo><mn>2</mn><mo>‚ãÖ</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator=\\\"true\\\">,</mo><mn>1</mn><mo>‚â§</mo><mi>k</mi><mo>‚â§</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">1 \\\\leq n \\\\leq 2 \\\\cdot 10^5, 1 \\\\leq k \\\\leq 10^9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7804em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">‚â§</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">‚â§</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">2</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">‚ãÖ</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.0085em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">5</span></span></span></span></span></span></span></span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">‚â§</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8304em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">‚â§</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span>\"\n      }), \" and \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"n\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n      }), \" is\\nodd.\"]\n    }), \"\\n\", _jsxs(Spoiler, {\n      title: \"Solution\",\n      children: [_jsxs(_components.p, {\n        children: [\"We first sort the array in ascending order. Then, we binary search for the\\nmaximum possible median. We know that the number of operations required to raise\\nthe median to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" increases monotonically as \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" increases, so we can use binary\\nsearch. For a given median value \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \", the number of operations required to raise\\nthe median to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" is\"]\n      }), _jsx(MATHDIV, {\n        className: \"math math-display\",\n        latex: \"\\\\sum_{i=(n+1)/2}^{n} \\\\max(0, x - \\\\texttt{arr}[i]).\",\n        children: \"<span class=\\\"katex-display\\\"><span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" display=\\\"block\\\"><semantics><mrow><munderover><mo>‚àë</mo><mrow><mi>i</mi><mo>=</mo><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo><mi mathvariant=\\\"normal\\\">/</mi><mn>2</mn></mrow><mi>n</mi></munderover><mi>max</mi><mo>‚Å°</mo><mo stretchy=\\\"false\\\">(</mo><mn>0</mn><mo separator=\\\"true\\\">,</mo><mi>x</mi><mo>‚àí</mo><mtext mathvariant=\\\"monospace\\\">arr</mtext><mo stretchy=\\\"false\\\">[</mo><mi>i</mi><mo stretchy=\\\"false\\\">]</mo><mo stretchy=\\\"false\\\">)</mo><mi mathvariant=\\\"normal\\\">.</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\sum_{i=(n+1)/2}^{n} \\\\max(0, x - \\\\texttt{arr}[i]).</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:3.1674em;vertical-align:-1.516em;\\\"></span><span class=\\\"mop op-limits\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.6514em;\\\"><span style=\\\"top:-1.809em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">i</span><span class=\\\"mrel mtight\\\">=</span><span class=\\\"mopen mtight\\\">(</span><span class=\\\"mord mathnormal mtight\\\">n</span><span class=\\\"mbin mtight\\\">+</span><span class=\\\"mord mtight\\\">1</span><span class=\\\"mclose mtight\\\">)</span><span class=\\\"mord mtight\\\">/2</span></span></span></span><span style=\\\"top:-3.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span><span class=\\\"mop op-symbol large-op\\\">‚àë</span></span></span><span style=\\\"top:-4.3em;margin-left:0em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3.05em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\">n</span></span></span></span></span><span class=\\\"vlist-s\\\">‚Äã</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:1.516em;\\\"><span></span></span></span></span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">max</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">0</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span><span class=\\\"mbin\\\">‚àí</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2222em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord text\\\"><span class=\\\"mord texttt\\\">arr</span></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">i</span><span class=\\\"mclose\\\">])</span><span class=\\\"mord\\\">.</span></span></span></span></span>\"\n      }), _jsxs(_components.p, {\n        children: [\"If this value is less than or equal to \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"k\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\\\"application/x-tex\\\">k</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.03148em;\\\">k</span></span></span></span>\"\n        }), \", then \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" can be the median, so our\\ncheck function returns \", _jsx(_components.code, {\n          children: \"true\"\n        }), \". Otherwise, \", _jsx(MATHSPAN, {\n          className: \"math math-inline\",\n          latex: \"x\",\n          children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\\\"application/x-tex\\\">x</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">x</span></span></span></span>\"\n        }), \" cannot be the median, so our check\\nfunction returns \", _jsx(_components.code, {\n          children: \"false\"\n        }), \".\"]\n      }), _jsxs(LanguageSection, {\n        children: [_jsxs(CPPSection, {\n          children: [_jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"#include <bits/stdc++.h>\\nusing namespace std;\\n\\nint lastTrue(int lo, int hi, function<bool(int)> f) {\\n\\tlo--;\\n\\twhile (lo < hi) {\\n\\t\\tint mid = lo + (hi - lo + 1) / 2;\\n\\t\\tif (f(mid)) {\\n\\t\\t\\tlo = mid;\\n\\t\\t} else {\\n\\t\\t\\thi = mid - 1;\\n\\t\\t}\\n\\t}\\n\\treturn lo;\\n}\\n\\nint main() {\\n\\tint size;\\n\\tint maxOps;\\n\\tcin >> size >> maxOps;\\n\\tvector<int> arr(size);\\n\\tfor (int& i: arr) {\\n\\t\\tcin >> i;\\n\\t}\\n\\t\\n\\tsort(arr.begin(), arr.end());\\n\\t// Use 2e9 instead of INT32_MAX to avoid overflow\\n\\tcout << lastTrue(1, 2e9, [&] (int x) {\\n\\t\\t// Returns true if the median can be raised to x\\n\\t\\tlong long opsNeeded = 0;\\n\\t\\tfor (int i = (size - 1) / 2; i < size; i++) {\\n\\t\\t\\topsNeeded += max(0, x - arr[i]);\\n\\t\\t}\\n\\t\\treturn opsNeeded <= maxOps;\\n\\t}) << endl;\\n}\\n\"\n            })\n          }), _jsxs(_components.p, {\n            children: [\"Here we write the check function as a\\n\", _jsx(_components.a, {\n              href: \"/general/lambda?lang=cpp#introduction\",\n              children: \"lambda expression\"\n            }), \".\"]\n          })]\n        }), _jsx(JavaSection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-java\",\n              children: \"import java.io.*;\\nimport java.util.*;\\n\\npublic class MaxMed {\\n\\tstatic int size;\\n\\tstatic int maxOps;\\n\\tstatic int[] arr;\\n\\tpublic static void main(String[] args){\\n\\t\\tKattio io = new Kattio();\\n\\n\\t\\tsize = io.nextInt();\\n\\t\\tmaxOps = io.nextInt();\\n\\t\\tarr = new int[size];\\n\\t\\tfor (int i = 0; i < size; i++) {\\n\\t\\t\\tarr[i] = io.nextInt();\\n\\t\\t}\\n\\t\\tArrays.sort(arr);\\n\\n\\t\\t// Use 2e9 instead of Integer.MAX_VALUE to avoid overflow\\n\\t\\tio.println(lastTrue(1, (int) 2e9));\\n\\t\\tio.close();\\n\\t}\\n\\n\\tpublic static boolean medReachable(int x) {\\n\\t\\t// Returns true if median can be raised to x\\n\\t\\tlong opsNeeded = 0;\\n\\t\\tfor (int i = (size - 1) / 2; i < size; i++)\\n\\t\\t\\topsNeeded += Math.max(0, x - arr[i]);\\n\\t\\treturn opsNeeded <= maxOps;\\n\\t}\\n\\n\\tpublic static int lastTrue(int lo, int hi) {\\n\\t\\tlo--;\\n\\t\\twhile (lo < hi) {\\n\\t\\t\\tint mid = lo + (hi - lo + 1) / 2;\\n\\t\\t\\tif (medReachable(mid)) {\\n\\t\\t\\t\\tlo = mid;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\thi = mid - 1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn lo;\\n\\t}\\n\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n            })\n          })\n        }), _jsx(PySection, {\n          children: _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-python\",\n              children: \"from typing import Callable\\n\\n\\ndef medReachable(x: int) -> bool:\\n\\t\\\"\\\"\\\"\\n\\tChecks whether the number of given operations is sufficient\\n\\tto raise the median of the array to x.\\n\\t\\\"\\\"\\\"\\n\\topsNeeded = 0\\n\\tfor i in range((size - 1) // 2, size):\\n\\t\\topsNeeded += max(0, x - arr[i])\\n\\treturn opsNeeded <= maxOps\\n\\n\\n# binary searches for the correct answer\\ndef lastTrue(lo: int, hi: int, f: Callable[[int], bool]) -> int:\\n\\tlo -= 1\\n\\twhile lo < hi:\\n\\t\\tmid = lo + (hi - lo + 1) // 2;\\n\\t\\tif f(mid):\\n\\t\\t\\tlo = mid\\n\\t\\telse:\\n\\t\\t\\thi = mid - 1\\n\\treturn lo\\n\\n\\nsize, maxOps = map(int, input().split())\\narr = sorted(list(map(int, input().split())))\\nprint(lastTrue(1, int(2e9), medReachable))\\n\"\n            })\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"common-mistakes\",\n      children: [_jsx(_components.a, {\n        href: \"#common-mistakes\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Common Mistakes\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"mistake-1---off-by-one\",\n      children: [_jsx(_components.a, {\n        href: \"#mistake-1---off-by-one\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Mistake 1 - Off By One\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Consider the code from CSAcademy's\\n\", _jsx(_components.a, {\n        href: \"https://csacademy.com/lesson/binary_search/\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Binary Search on Functions\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"long long f(int x) {\\n\\treturn (long long) x * x;\\n}\\n\\nint sqrt(int x) {\\n\\tint lo = 0;\\n\\tint hi = x;\\n\\twhile (lo < hi) {\\n\\t\\tint mid = (lo + hi) / 2;\\n\\t\\tif (f(mid) <= x) {\\n\\t\\t\\tlo = mid;\\n\\t\\t} else {\\n\\t\\t\\thi = mid - 1;\\n\\t\\t}\\n\\t}\\n\\treturn lo;\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"public static long f(int x) {\\n\\treturn (long) x * x;\\n}\\n\\npublic static int sqrt(int x) {\\n\\tint lo = 0;\\n\\tint hi = x;\\n\\twhile (lo < hi) {\\n\\t\\tint mid = (lo + hi) / 2;\\n\\t\\tif (f(mid) <= x) {\\n\\t\\t\\tlo = mid;\\n\\t\\t} else {\\n\\t\\t\\thi = mid - 1;\\n\\t\\t}\\n\\t}\\n\\treturn lo;\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            children: \"def f(x: int) -> int:\\n\\treturn x * x\\n\\ndef sqrt(x: int) -> int:\\n\\tlo = 0\\n\\thi = 0\\n\\twhile lo < hi:\\n\\t\\tmid = (lo + hi) // 2\\n\\t\\tif f(mid) <= x:\\n\\t\\t\\tlo = mid\\n\\t\\telse:\\n\\t\\t\\thi = mid - 1\\n\\treturn lo\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This results in an infinite loop if \", _jsx(_components.code, {\n        children: \"left=0\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"right=1\"\n      }), \"! To fix this, set\\n\", _jsx(_components.code, {\n        children: \"middle = (left+right+1)/2\"\n      }), \" instead.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"mistake-2---not-accounting-for-negative-bounds\",\n      children: [_jsx(_components.a, {\n        href: \"#mistake-2---not-accounting-for-negative-bounds\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Mistake 2 - Not Accounting for Negative Bounds\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Consider a slightly modified version of \", _jsx(_components.code, {\n        children: \"firstTrue\"\n      }), \":\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <functional>\\n\\nusing namespace std;\\n\\nint firstTrue(int lo, int hi, function<bool(int)> f) {\\n\\thi++;\\n\\twhile (lo < hi) {\\n\\t\\tint mid = (lo + hi) / 2;\\n\\t\\tif (f(mid)) {\\n\\t\\t\\thi = mid;\\n\\t\\t} else {\\n\\t\\t\\tlo = mid + 1;\\n\\t\\t}\\n\\t}\\n\\treturn lo;\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"public static int firstTrue(int lo, int hi, Predicate<Integer> f) {\\n\\thi++;\\n\\twhile (lo < hi) {\\n\\t\\tint mid = (lo + hi) / 2;\\n\\t\\tif (f.test(mid)) {\\n\\t\\t\\thi = mid;\\n\\t\\t} else {\\n\\t\\t\\tlo = mid + 1;\\n\\t\\t}\\n\\t}\\n\\treturn lo;\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            children: \"from typing import Callable\\n\\n\\ndef firstTrue(lo: int, hi: int, f: Callable[[int], bool]) -> int:\\n\\thi += 1\\n\\twhile lo < hi:\\n\\t\\tmid = (lo + hi) // 2\\n\\t\\tif f(mid):\\n\\t\\t\\thi = mid\\n\\t\\telse:\\n\\t\\t\\tlo = mid + 1\\n\\treturn lo\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This code does not necessarily work if \", _jsx(_components.code, {\n        children: \"lo\"\n      }), \" is negative! Consider the following\\nexample:\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"int main() {\\n\\t// outputs -8 instead of -9\\n\\tcout << firstTrue(-10, -10, [] (int x) { return false; }) << \\\"\\\\n\\\";\\n\\t\\n\\t// causes an infinite loop\\n\\tcout << firstTrue(-10, -10, [] (int x) { return true; }) << \\\"\\\\n\\\";\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"public static void main(String[] args) {\\n\\t// outputs -8 instead of -9\\n\\tSystem.out.println(firstTrue(-10, -10, (x) -> false));\\n\\n\\t// causes an infinite loop\\n\\tSystem.out.println(firstTrue(-10, -10, (x) -> true));\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            children: \"# outputs -8 instead of -9\\nprint(firstTrue(-10, -10, lambda x: False))\\n\\n# causes an infinite loop\\nprint(firstTrue(-10, -10, lambda x: True))\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is because dividing an odd negative integer by two will round it up instead\\nof down.\"\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <functional>\\n\\nusing namespace std;\\n\\nint firstTrue(int lo, int hi, function<bool(int)> f) {\\n\\thi++;\\n\\twhile (lo < hi) {\\n\\t\\tint mid = lo + (hi - lo) / 2;\\n\\t\\tif (f(mid)) {\\n\\t\\t\\thi = mid;\\n\\t\\t} else {\\n\\t\\t\\tlo = mid + 1;\\n\\t\\t}\\n\\t}\\n\\treturn lo;\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"public static int firstTrue(int lo, int hi, Predicate<Integer> f) {\\n\\thi++;\\n\\twhile (lo < hi) {\\n\\t\\tint mid = lo + (hi - lo) / 2;\\n\\t\\tif (f.test(mid)) {\\n\\t\\t\\thi = mid;\\n\\t\\t} else {\\n\\t\\t\\tlo = mid + 1;\\n\\t\\t}\\n\\t}\\n\\treturn lo;\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            children: \"from typing import Callable\\n\\n\\ndef firstTrue(lo: int, hi: NotImplemented, f: Callable[[int], bool]) -> int:\\n\\thi += 1\\n\\twhile lo < hi:\\n\\t\\tmid = lo + (hi - lo) // 2\\n\\t\\tif f(mid):\\n\\t\\t\\thi = mid\\n\\t\\telse:\\n\\t\\t\\tlo = mid + 1\\n\\treturn lo\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"mistake-3---integer-overflow\",\n      children: [_jsx(_components.a, {\n        href: \"#mistake-3---integer-overflow\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Mistake 3 - Integer Overflow\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The first version of \", _jsx(_components.code, {\n        children: \"firstTrue\"\n      }), \" won't work if \", _jsx(_components.code, {\n        children: \"hi-lo\"\n      }), \" initially exceeds\\n\", _jsx(_components.code, {\n        children: \"INT_MAX\"\n      }), \", while the second version of \", _jsx(_components.code, {\n        children: \"firstTrue\"\n      }), \" won't work if \", _jsx(_components.code, {\n        children: \"lo+hi\"\n      }), \" exceeds\\n\", _jsx(_components.code, {\n        children: \"INT_MAX\"\n      }), \" at any point during execution. If this is an issue, use \", _jsx(_components.code, {\n        children: \"long long\"\n      }), \"s\\ninstead of \", _jsx(_components.code, {\n        children: \"int\"\n      }), \"s.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"library-functions-for-binary-search\",\n      children: [_jsx(_components.a, {\n        href: \"#library-functions-for-binary-search\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Library Functions For Binary Search\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(Resources, {\n          children: _jsx(Resource, {\n            source: \"CPP\",\n            url: \"http://www.cplusplus.com/reference/algorithm/lower_bound/\",\n            title: \"lower_bound, upper_bound\",\n            starred: true,\n            children: _jsx(_components.p, {\n              children: \"with examples\"\n            })\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsxs(Resources, {\n          children: [_jsx(Resource, {\n            source: \"JAVA\",\n            url: \"https://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch(int[],%20int)\",\n            title: \"Arrays.binarySearch\"\n          }), _jsx(Resource, {\n            source: \"JAVA\",\n            url: \"https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#binarySearch(java.util.List,%20T)\",\n            title: \"Collections.binarySearch\"\n          })]\n        })\n      }), _jsx(PySection, {\n        children: _jsxs(Resources, {\n          children: [_jsx(Resource, {\n            source: \"Python\",\n            url: \"https://docs.python.org/3/library/bisect.html\",\n            title: \"Array bisection algorithm\"\n          }), _jsx(Resource, {\n            source: \"GFG\",\n            url: \"https://www.geeksforgeeks.org/binary-search-bisect-in-python/\",\n            title: \"Binary Search (bisect) in Python\"\n          })]\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"example---counting-haybales\",\n      children: [_jsx(_components.a, {\n        href: \"#example---counting-haybales\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Example - Counting Haybales\"]\n    }), \"\\n\", _jsx(FocusProblem, {\n      problem: \"count\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As each of the points are in the range \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"0 \\\\ldots 1\\\\,000\\\\,000\\\\,000\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>0</mn><mo>‚Ä¶</mo><mn>1</mn><mtext>‚Äâ</mtext><mn>000</mn><mtext>‚Äâ</mtext><mn>000</mn><mtext>‚Äâ</mtext><mn>000</mn></mrow><annotation encoding=\\\"application/x-tex\\\">0 \\\\ldots 1\\\\,000\\\\,000\\\\,000</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">0</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"minner\\\">‚Ä¶</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">000</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">000</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">000</span></span></span></span>\"\n      }), \", storing\\nlocations of haybales in a boolean array and then taking prefix sums of that\\nwould take too much time and memory.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Instead, let's place all of the locations of the haybales into a list and sort\\nit. Now we can use binary search to count the number of cows in any range\\n\", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"[A,B]\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>A</mi><mo separator=\\\"true\\\">,</mo><mi>B</mi><mo stretchy=\\\"false\\\">]</mo></mrow><annotation encoding=\\\"application/x-tex\\\">[A,B]</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\">A</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.05017em;\\\">B</span><span class=\\\"mclose\\\">]</span></span></span></span>\"\n      }), \" in \", _jsx(MATHSPAN, {\n        className: \"math math-inline\",\n        latex: \"\\\\mathcal{O}(\\\\log N)\",\n        children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>N</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log N)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.10903em;\\\">N</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n      }), \" time.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"with-built-in-function\",\n      children: [_jsx(_components.a, {\n        href: \"#with-built-in-function\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"With Built-in Function\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsxs(CPPSection, {\n        children: [_jsxs(_components.p, {\n          children: [\"We can use the the built-in\\n\", _jsx(_components.a, {\n            href: \"https://en.cppreference.com/w/cpp/algorithm/lower_bound\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: _jsx(_components.code, {\n              children: \"lower_bound\"\n            })\n          }), \" and\\n\", _jsx(_components.a, {\n            href: \"https://en.cppreference.com/w/cpp/algorithm/upper_bound\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: _jsx(_components.code, {\n              children: \"upper_bound\"\n            })\n          }), \"\\nfunctions.\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\nusing namespace std;\\n\\nvoid setIO(string name=\\\"\\\") {  // name is nonempty for USACO file I/O\\n\\tios_base::sync_with_stdio(0); cin.tie(0);  // see Fast Input & Output\\n\\t// alternatively, cin.tie(0)->sync_with_stdio(0);\\n\\tif (!name.empty()) {\\n\\t\\tfreopen((name+\\\".in\\\").c_str(), \\\"r\\\", stdin);  // see Input & Output\\n\\t\\tfreopen((name+\\\".out\\\").c_str(), \\\"w\\\", stdout);\\n\\t}\\n}\\n\\nint main() {\\n\\tsetIO(\\\"haybales\\\");\\n\\tint baleNum;\\n\\tint queryNum;\\n\\tcin >> baleNum >> queryNum;\\n\\tvector<int> bales(baleNum);\\n\\tfor (int i = 0; i < baleNum; i++) {\\n\\t\\tcin >> bales[i];\\n\\t}\\n\\t\\n\\tsort(begin(bales), end(bales));\\n\\tfor (int i = 0; i < queryNum; i++) {\\n\\t\\tint qStart;\\n\\t\\tint qEnd;\\n\\t\\tcin >> qStart >> qEnd;\\n\\t\\tcout << upper_bound(begin(bales), end(bales), qEnd) \\n\\t\\t\\t\\t\\t- lower_bound(begin(bales), end(bales), qStart) << \\\"\\\\n\\\";\\n\\t}\\n}\\n\"\n          })\n        })]\n      }), _jsxs(JavaSection, {\n        children: [_jsxs(_components.p, {\n          children: [\"We can use the builtin\\n\", _jsx(_components.a, {\n            href: \"https://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch(int%5B%5D,%20int)\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: _jsx(_components.code, {\n              children: \"Arrays.binarySearch\"\n            })\n          }), \"\\nfunction.\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.io.*;\\nimport java.util.*;\\n\\npublic class Haybales {\\n\\tpublic static void main(String[] args) throws IOException {\\n\\t\\tBufferedReader br = new BufferedReader(new FileReader(new File(\\\"haybales.in\\\")));\\n\\t\\tPrintWriter out = new PrintWriter(\\\"haybales.out\\\");\\n\\t\\tStringTokenizer st = new StringTokenizer(br.readLine());\\n\\n\\t\\tint baleNum = Integer.parseInt(st.nextToken());\\n\\t\\tint queryNum = Integer.parseInt(st.nextToken());\\n\\t\\tint[] bales = new int[baleNum];\\n\\t\\tst = new StringTokenizer(br.readLine());\\n\\t\\tfor (int i = 0; i < baleNum; i++) {\\n\\t\\t\\tbales[i] = Integer.parseInt(st.nextToken());\\n\\t\\t}\\n\\t\\t\\n\\t\\tArrays.sort(bales);\\n\\t\\tfor (int i = 0; i < queryNum; i++) {\\n\\t\\t\\tst = new StringTokenizer(br.readLine());\\n\\t\\t\\tint start = Integer.parseInt(st.nextToken());\\n\\t\\t\\tint end = Integer.parseInt(st.nextToken());\\n\\t\\t\\t\\n\\t\\t\\t// Get the left-est bale that's still in the interval\\n\\t\\t\\tint bi = Arrays.binarySearch(bales, start);\\n\\t\\t\\tif (bi < 0) {\\n\\t\\t\\t\\tbi = Math.abs(bi + 1);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// And also get the right-est bale that's still in the interval\\n\\t\\t\\tint ti = Arrays.binarySearch(bales, end);\\n\\t\\t\\tif (ti < 0) {\\n\\t\\t\\t\\tti = Math.abs(ti + 2);\\n\\t\\t\\t}\\n\\t\\t\\tout.println(ti - bi + 1);\\n\\t\\t}\\n\\t\\tout.close();\\n\\t}\\n}\\n\"\n          })\n        })]\n      }), _jsxs(PySection, {\n        children: [_jsxs(_components.p, {\n          children: [\"We can use the builtin\\n\", _jsx(_components.a, {\n            href: \"https://docs.python.org/3/library/bisect.html#bisect.bisect\",\n            target: \"_blank\",\n            rel: \"nofollow noopener noreferrer\",\n            children: _jsx(_components.code, {\n              children: \"bisect.bisect\"\n            })\n          }), \"\\nfunction.\"]\n        }), _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"from bisect import bisect\\n\\ninp = open(\\\"haybales.in\\\", \\\"r\\\")\\nout = open(\\\"haybales.out\\\", \\\"w\\\")\\n\\nbaleNum, queryNum = map(int, inp.readline().split())\\nbales = sorted(list(map(int, inp.readline().split())))\\nfor _ in range(queryNum):\\n\\tstart, end = map(int, inp.readline().split())\\n\\tprint(bisect(bales, end) - bisect(bales, start - 1), file=out)\\n\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"without-using-built-in-functions\",\n      children: [_jsx(_components.a, {\n        href: \"#without-using-built-in-functions\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Without Using Built-in Functions\"]\n    }), \"\\n\", _jsxs(LanguageSection, {\n      children: [_jsx(CPPSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-cpp\",\n            children: \"#include <bits/stdc++.h>\\nusing namespace std;\\n\\nvoid setIO(string name=\\\"\\\") {  // name is nonempty for USACO file I/O\\n\\tios_base::sync_with_stdio(0); cin.tie(0);  // see Fast Input & Output\\n\\t// alternatively, cin.tie(0)->sync_with_stdio(0);\\n\\tif (!name.empty()) {\\n\\t\\tfreopen((name+\\\".in\\\").c_str(), \\\"r\\\", stdin);  // see Input & Output\\n\\t\\tfreopen((name+\\\".out\\\").c_str(), \\\"w\\\", stdout);\\n\\t}\\n}\\n\\nint main() {\\n\\tsetIO(\\\"haybales\\\");\\n\\tint baleNum;\\n\\tint queryNum;\\n\\tcin >> baleNum >> queryNum;\\n\\tvector<int> bales(baleNum);\\n\\tfor (int& i: bales) {\\n\\t\\tcin >> i;\\n\\t}\\n\\n\\tsort(begin(bales), end(bales));\\n\\t// Returns the number of elements that are at most x\\n\\tauto atMost = [&] (int x) {\\n\\t\\tint lo = 0;\\n\\t\\tint hi = bales.size();\\n\\t\\twhile (lo < hi) {\\n\\t\\t\\tint mid = (lo + hi) / 2;\\n\\t\\t\\tif (bales[mid] <= x) {\\n\\t\\t\\t\\tlo = mid + 1;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\thi = mid;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn lo;\\n\\t};\\n\\n\\tfor (int i = 0; i < queryNum; ++i) {\\n\\t\\tint qStart;\\n\\t\\tint qEnd;\\n\\t\\tcin >> qStart >> qEnd;\\n\\t\\tcout << atMost(qEnd) - atMost(qStart - 1) << \\\"\\\\n\\\";\\n\\t}\\n}\\n\"\n          })\n        })\n      }), _jsx(JavaSection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-java\",\n            children: \"import java.util.*;\\nimport java.io.*;\\n\\npublic class Haybales {\\n\\tstatic int[] bales;\\n\\tpublic static void main(String[] args) throws IOException {\\n\\t\\tKattio io = new Kattio(\\\"haybales\\\");\\n\\t\\tint baleNum = io.nextInt();\\n\\t\\tint queryNum = io.nextInt();\\n\\t\\tbales = new int[baleNum];\\n\\t\\tfor (int i = 0; i < baleNum; i++) {\\n\\t\\t\\tbales[i] = io.nextInt();\\n\\t\\t}\\n\\t\\tArrays.sort(bales);\\n\\n\\t\\tfor (int i = 0; i < queryNum; ++i) {\\n\\t\\t\\tint start = io.nextInt();\\n\\t\\t\\tint end = io.nextInt();\\n\\t\\t\\tio.println(atMost(end) - atMost(start - 1));\\n\\t\\t}\\n\\t\\tio.close();\\n\\t}\\n\\n\\t// Returns the number of elements that are at most x\\n\\tpublic static int atMost(int x) {\\n\\t\\tint lo = 0;\\n\\t\\tint hi = bales.length;\\n\\t\\twhile (lo < hi) {\\n\\t\\t\\tint mid = (lo + hi) / 2;\\n\\t\\t\\tif (bales[mid] <= x) {\\n\\t\\t\\t\\tlo = mid + 1;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\thi = mid;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn lo;\\n\\t}\\n\\n\\t//BeginCodeSnip{Kattio}\\n\\tstatic class Kattio extends PrintWriter {\\n\\t\\tprivate BufferedReader r;\\n\\t\\tprivate StringTokenizer st;\\n\\t\\t// standard input\\n\\t\\tpublic Kattio() { this(System.in, System.out); }\\n\\t\\tpublic Kattio(InputStream i, OutputStream o) {\\n\\t\\t\\tsuper(o);\\n\\t\\t\\tr = new BufferedReader(new InputStreamReader(i));\\n\\t\\t}\\n\\t\\t// USACO-style file input\\n\\t\\tpublic Kattio(String problemName) throws IOException {\\n\\t\\t\\tsuper(problemName + \\\".out\\\");\\n\\t\\t\\tr = new BufferedReader(new FileReader(problemName + \\\".in\\\"));\\n\\t\\t}\\n\\t\\t// returns null if no more input\\n\\t\\tpublic String next() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\twhile (st == null || !st.hasMoreTokens())\\n\\t\\t\\t\\t\\tst = new StringTokenizer(r.readLine());\\n\\t\\t\\t\\treturn st.nextToken();\\n\\t\\t\\t} catch (Exception e) { }\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\tpublic int nextInt() { return Integer.parseInt(next()); }\\n\\t\\tpublic double nextDouble() { return Double.parseDouble(next()); }\\n\\t\\tpublic long nextLong() { return Long.parseLong(next()); }\\n\\t}\\n\\t//EndCodeSnip\\n}\\n\"\n          })\n        })\n      }), _jsx(PySection, {\n        children: _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-py\",\n            children: \"def atMost(x: int) -> int:\\n\\tlo = 0\\n\\thi = len(bales)\\n\\twhile lo < hi:\\n\\t\\tmid = (lo + hi) // 2\\n\\t\\tif bales[mid] <= x:\\n\\t\\t\\tlo = mid + 1\\n\\t\\telse:\\n\\t\\t\\thi = mid\\n\\treturn lo\\n\\n\\ninp = open(\\\"haybales.in\\\", \\\"r\\\")\\nout = open(\\\"haybales.out\\\", \\\"w\\\")\\n\\nbaleNum, queryNum = map(int, inp.readline().split())\\nbales = sorted(list(map(int, inp.readline().split())))\\nfor _ in range(queryNum):\\n\\tstart, end = map(int, inp.readline().split())\\n\\tprint(atMost(end) - atMost(start - 1), file=out)\\n\"\n          })\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"problems\",\n      children: [_jsx(_components.a, {\n        href: \"#problems\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Problems\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"usaco\",\n      children: [_jsx(_components.a, {\n        href: \"#usaco\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"USACO\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"usaco\",\n      hideSuggestProblemButton: true\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"general\",\n      children: [_jsx(_components.a, {\n        href: \"#general\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"General\"]\n    }), \"\\n\", _jsx(Problems, {\n      problems: \"general\",\n      hideSuggestProblemButton: true\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"quiz\",\n      children: [_jsx(_components.a, {\n        href: \"#quiz\",\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        className: \"anchor before\",\n        children: _jsx(HeaderLink, {})\n      }), \"Quiz\"]\n    }), \"\\n\", _jsxs(Quiz, {\n      children: [_jsxs(Quiz.Question, {\n        children: [_jsxs(_components.p, {\n          children: [\"What is the worst and the best case time complexity for binary searching for a number in a sorted array of size \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"n\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n          }), \"?\"]\n        }), _jsxs(Quiz.Answer, {\n          children: [_jsxs(_components.p, {\n            children: [_jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"\\\\mathcal{O}(\\\\log n)\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n            }), \" / \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"\\\\Omega(\\\\log n)\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">Œ©</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\Omega(\\\\log n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">Œ©</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n            })]\n          }), _jsx(Quiz.Explanation, {\n            children: _jsx(_components.p, {\n              children: \"Incorrect. Consider the case where the target element is the median of the array.\"\n            })\n          })]\n        }), _jsxs(Quiz.Answer, {\n          correct: true,\n          children: [_jsxs(_components.p, {\n            children: [_jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"\\\\mathcal{O}(\\\\log n)\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n            }), \" / \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"\\\\Omega(1)\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">Œ©</mi><mo stretchy=\\\"false\\\">(</mo><mn>1</mn><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\Omega(1)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">Œ©</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord\\\">1</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n            })]\n          }), _jsx(Quiz.Explanation, {\n            children: _jsx(_components.p, {\n              children: \"Correct. The worst case happens when the number is not present, and the best case occurs if the first number we check is the target value.\"\n            })\n          })]\n        }), _jsxs(Quiz.Answer, {\n          children: [_jsxs(_components.p, {\n            children: [_jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"\\\\mathcal{O}(n)\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n            }), \" / \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"\\\\Omega(\\\\log n)\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">Œ©</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\Omega(\\\\log n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">Œ©</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n            })]\n          }), _jsx(Quiz.Explanation, {\n            children: _jsxs(_components.p, {\n              children: [\"Incorrect. Binary search always takes at most \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\lceil \\\\log n \\\\rceil\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">‚åà</mo><mi>log</mi><mo>‚Å°</mo><mi>n</mi><mo stretchy=\\\"false\\\">‚åâ</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\lceil \\\\log n \\\\rceil</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">‚åà</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">‚åâ</span></span></span></span>\"\n              }), \" iterations.\"]\n            })\n          })]\n        }), _jsxs(Quiz.Answer, {\n          children: [_jsxs(_components.p, {\n            children: [_jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"\\\\mathcal{O}(\\\\log n)\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n            }), \" / \", _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"\\\\Omega(\\\\log \\\\log n)\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"normal\\\">Œ©</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>log</mi><mo>‚Å°</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\Omega(\\\\log \\\\log n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord\\\">Œ©</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n            })]\n          }), _jsx(Quiz.Explanation, {\n            children: _jsx(_components.p, {\n              children: \"Incorrect. Consider the case where the target element is the median of the array.\"\n            })\n          })]\n        })]\n      }), _jsxs(Quiz.Question, {\n        children: [_jsx(_components.p, {\n          children: \"What is an advantage of using binary search over linear search?\"\n        }), _jsxs(Quiz.Answer, {\n          correct: true,\n          children: [_jsx(_components.p, {\n            children: \"Faster time complexity\"\n          }), _jsx(Quiz.Explanation, {\n            children: _jsxs(_components.p, {\n              children: [\"Correct. Linear search runs in \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\mathcal{O}(n)\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n              }), \", whereas binary search runs in \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\mathcal{O}(\\\\log n)\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n              }), \".\"]\n            })\n          })]\n        }), _jsxs(Quiz.Answer, {\n          children: [_jsx(_components.p, {\n            children: \"Less Memory\"\n          }), _jsx(Quiz.Explanation, {\n            children: _jsxs(_components.p, {\n              children: [\"Incorrect. Binary search and linear search both use \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\mathcal{O}(n)\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n              }), \" memory.\"]\n            })\n          })]\n        }), _jsxs(Quiz.Answer, {\n          children: [_jsx(_components.p, {\n            children: \"Easier implementation\"\n          }), _jsx(Quiz.Explanation, {\n            children: _jsxs(_components.p, {\n              children: [\"Incorrect. Linear search is, in most cases, a simple \", _jsx(_components.code, {\n                children: \"for\"\n              }), \" loop, whereas binary search most often requires at least two additional variables and conditionals.\"]\n            })\n          })]\n        })]\n      }), _jsxs(Quiz.Question, {\n        children: [_jsxs(_components.p, {\n          children: [\"Suppose a program involving binary search runs in \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"\\\\mathcal{O}(\\\\log n)\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi mathvariant=\\\"script\\\">O</mi><mo stretchy=\\\"false\\\">(</mo><mi>log</mi><mo>‚Å°</mo><mi>n</mi><mo stretchy=\\\"false\\\">)</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\mathcal{O}(\\\\log n)</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mord mathcal\\\" style=\\\"margin-right:0.02778em;\\\">O</span><span class=\\\"mopen\\\">(</span><span class=\\\"mop\\\">lo<span style=\\\"margin-right:0.01389em;\\\">g</span></span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span><span class=\\\"mclose\\\">)</span></span></span></span>\"\n          }), \" time for some \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"n\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n          }), \". What is the smallest value of \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"n\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\\\"application/x-tex\\\">n</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">n</span></span></span></span>\"\n          }), \" where runtime would be an issue? A typical online judge can handle around \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"10^9\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">10^9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span>\"\n          }), \" operations in a second.\"]\n        }), _jsxs(Quiz.Answer, {\n          children: [_jsx(_components.p, {\n            children: _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"9\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\\\"application/x-tex\\\">9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">9</span></span></span></span>\"\n            })\n          }), _jsx(Quiz.Explanation, {\n            children: _jsx(_components.p, {\n              children: \"Incorrect.\"\n            })\n          })]\n        }), _jsxs(Quiz.Answer, {\n          children: [_jsx(_components.p, {\n            children: _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"10^9\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">10^9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span>\"\n            })\n          }), _jsx(Quiz.Explanation, {\n            children: _jsx(_components.p, {\n              children: \"Incorrect.\"\n            })\n          })]\n        }), _jsxs(Quiz.Answer, {\n          children: [_jsx(_components.p, {\n            children: _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"99^9\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>9</mn><msup><mn>9</mn><mn>9</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">99^9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">9</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">9</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span>\"\n            })\n          }), _jsx(Quiz.Explanation, {\n            children: _jsx(_components.p, {\n              children: \"Incorrect.\"\n            })\n          })]\n        }), _jsxs(Quiz.Answer, {\n          correct: true,\n          children: [_jsx(_components.p, {\n            children: _jsx(MATHSPAN, {\n              className: \"math math-inline\",\n              latex: \"10^{10^{9}}\",\n              children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow></msup></mrow><annotation encoding=\\\"application/x-tex\\\">10^{10^{9}}</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.9869em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.9869em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">1</span><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8913em;\\\"><span style=\\\"top:-2.931em;margin-right:0.0714em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.5em;\\\"></span><span class=\\\"sizing reset-size3 size1 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>\"\n            })\n          }), _jsx(Quiz.Explanation, {\n            children: _jsxs(_components.p, {\n              children: [\"Correct. The logarithm of this value is a bit more than \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"10^9\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">10^9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span>\"\n              }), \". A straightforward, logarithmic binary search will almost never run into issues regarding time limit.\"]\n            })\n          })]\n        })]\n      }), _jsxs(Quiz.Question, {\n        children: [_jsxs(_components.p, {\n          children: [\"Suppose we were tasked to find the maximum value \", _jsx(_components.code, {\n            children: \"m\"\n          }), \" in the range \", _jsx(MATHSPAN, {\n            className: \"math math-inline\",\n            latex: \"[l,r], 0 \\\\leq l \\\\leq r \\\\leq 10^9\",\n            children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">[</mo><mi>l</mi><mo separator=\\\"true\\\">,</mo><mi>r</mi><mo stretchy=\\\"false\\\">]</mo><mo separator=\\\"true\\\">,</mo><mn>0</mn><mo>‚â§</mo><mi>l</mi><mo>‚â§</mo><mi>r</mi><mo>‚â§</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\\\"application/x-tex\\\">[l,r], 0 \\\\leq l \\\\leq r \\\\leq 10^9</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1em;vertical-align:-0.25em;\\\"></span><span class=\\\"mopen\\\">[</span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mclose\\\">]</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord\\\">0</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">‚â§</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8304em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">‚â§</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.7719em;vertical-align:-0.136em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">‚â§</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\">1</span><span class=\\\"mord\\\"><span class=\\\"mord\\\">0</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\">9</span></span></span></span></span></span></span></span></span></span></span>\"\n          }), \" such that a given monotonic boolean function \", _jsx(_components.code, {\n            children: \"f(m)\"\n          }), \" returns \", _jsx(_components.code, {\n            children: \"true\"\n          }), \". The following code has an error in it that causes an infinite loop. Find the corrected version. Assume that \", _jsx(_components.code, {\n            children: \"f(l)\"\n          }), \" always evaluates to true (i.e., there exists an \", _jsx(_components.code, {\n            children: \"m\"\n          }), \" satisfying the given conditions).\"]\n        }), _jsx(LanguageSection, {\n          children: _jsx(CPPSection, {\n            children: _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-cpp\",\n                children: \"int findMaxTrue(int l, int r, function<bool(int)> f) {\\n\\twhile (l < r) {\\n\\t\\tint m = (l + r) / 2;\\n\\t\\tif (f(m)) {\\n\\t\\t\\tl = m;\\n\\t\\t} else {\\n\\t\\t\\tr = m - 1;\\n\\t\\t}\\n\\t}\\n\\treturn l;\\n}\\n\"\n              })\n            })\n          })\n        }), _jsxs(Quiz.Answer, {\n          children: [_jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"int findMaxTrue(int l, int r, function<bool(int)> f) {\\n\\twhile (l <= r) { // <= instead of <\\n\\t\\tint m = (l + r) / 2;\\n\\t\\tif (f(m)) {\\n\\t\\t\\tl = m;\\n\\t\\t} else {\\n\\t\\t\\tr = m - 1;\\n\\t\\t}\\n\\t}\\n\\treturn l;\\n}\\n\"\n            })\n          }), _jsxs(Quiz.Explanation, {\n            children: [_jsxs(_components.p, {\n              children: [\"Incorrect. This will still cause an infinite loop. For instance, if for \", _jsx(_components.code, {\n                children: \"f\"\n              }), \" we have\"]\n            }), _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-cpp\",\n                children: \"bool f(int m) { return m <= 7; }\\n\"\n              })\n            }), _jsxs(_components.p, {\n              children: [\"and call \", _jsx(_components.code, {\n                children: \"findMaxTrue(1, 11, f)\"\n              }), \", the program will never terminate (it will be stuck at \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"l = 6, r = 7\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>l</mi><mo>=</mo><mn>6</mn><mo separator=\\\"true\\\">,</mo><mi>r</mi><mo>=</mo><mn>7</mn></mrow><annotation encoding=\\\"application/x-tex\\\">l = 6, r = 7</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8389em;vertical-align:-0.1944em;\\\"></span><span class=\\\"mord\\\">6</span><span class=\\\"mpunct\\\">,</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.1667em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">7</span></span></span></span>\"\n              }), \").\"]\n            })]\n          })]\n        }), _jsxs(Quiz.Answer, {\n          children: [_jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"int findMaxTrue(int l, int r, function<bool(int)> f) {\\n\\twhile (l < r) {\\n\\t\\tint m = (l + r) / 2;\\n\\t\\tif (f(m)) {\\n\\t\\t\\tl = m + 1;  // change m to m + 1\\n\\t\\t} else {\\n\\t\\t\\tr = m;  // change m - 1 to m\\n\\t\\t}\\n\\t}\\n\\treturn l;\\n}\\n\"\n            })\n          }), _jsx(Quiz.Explanation, {\n            children: _jsx(_components.p, {\n              children: \"Incorrect. While this will no longer cause an infinite loop, it will now output the wrong answer (instead of the maximum number that evaluates to true, it will return the minimum number that evaluates to false).\"\n            })\n          })]\n        }), _jsxs(Quiz.Answer, {\n          children: [_jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"int findMaxTrue(int l, int r, function<bool(int)> f) {\\n\\twhile (l < r) {\\n\\t\\tint m = l + (r - l) / 2;  // change (l + r) / 2\\n\\t\\tif (f(m)) {\\n\\t\\t\\tl = m;\\n\\t\\t} else {\\n\\t\\t\\tr = m - 1;\\n\\t\\t}\\n\\t}\\n\\treturn l;\\n}\\n\"\n            })\n          }), _jsx(Quiz.Explanation, {\n            children: _jsx(_components.p, {\n              children: \"Incorrect. This is equivalent to the previous statement, except this statement is sometimes used to avoid integer overflow.\"\n            })\n          })]\n        }), _jsxs(Quiz.Answer, {\n          correct: true,\n          children: [_jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-cpp\",\n              children: \"int findMaxTrue(int l, int r, function<bool(int)> f) {\\n\\twhile (l < r) {\\n\\t\\tint m = (l + r + 1) / 2;  // change (l + r) / 2\\n\\t\\tif (f(m)) {\\n\\t\\t\\tl = m;\\n\\t\\t} else {\\n\\t\\t\\tr = m - 1;\\n\\t\\t}\\n\\t}\\n\\treturn l;\\n}\\n\"\n            })\n          }), _jsx(Quiz.Explanation, {\n            children: _jsxs(_components.p, {\n              children: [\"Correct. The reason for an infinite loop is when \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"r\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n              }), \" is one more than \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"l\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\\\"application/x-tex\\\">l</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span></span></span></span>\"\n              }), \" and \", _jsx(_components.code, {\n                children: \"f(l)\"\n              }), \" evaluates to \", _jsx(_components.code, {\n                children: \"true\"\n              }), \" . \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"m\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\\\"application/x-tex\\\">m</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\">m</span></span></span></span>\"\n              }), \" will be defined as \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\lfloor \\\\frac {l + r} 2 \\\\rfloor = l\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">‚åä</mo><mfrac><mrow><mi>l</mi><mo>+</mo><mi>r</mi></mrow><mn>2</mn></mfrac><mo stretchy=\\\"false\\\">‚åã</mo><mo>=</mo><mi>l</mi></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\lfloor \\\\frac {l + r} 2 \\\\rfloor = l</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.2251em;vertical-align:-0.345em;\\\"></span><span class=\\\"mopen\\\">‚åä</span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8801em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mbin mtight\\\">+</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span></span><span class=\\\"vlist-s\\\">‚Äã</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.345em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mclose\\\">‚åã</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span><span class=\\\"mrel\\\">=</span><span class=\\\"mspace\\\" style=\\\"margin-right:0.2778em;\\\"></span></span><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span></span></span></span>\"\n              }), \", and will thus evaluate to true, which means that \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"l\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>l</mi></mrow><annotation encoding=\\\"application/x-tex\\\">l</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6944em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.01968em;\\\">l</span></span></span></span>\"\n              }), \" and \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"r\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n              }), \" have not changed in the loop. By adding \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"1\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\\\"application/x-tex\\\">1</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.6444em;\\\"></span><span class=\\\"mord\\\">1</span></span></span></span>\"\n              }), \" to the expression, \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"\\\\lfloor \\\\frac {l + r + 1} 2 \\\\rfloor\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mo stretchy=\\\"false\\\">‚åä</mo><mfrac><mrow><mi>l</mi><mo>+</mo><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo stretchy=\\\"false\\\">‚åã</mo></mrow><annotation encoding=\\\"application/x-tex\\\">\\\\lfloor \\\\frac {l + r + 1} 2 \\\\rfloor</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:1.2251em;vertical-align:-0.345em;\\\"></span><span class=\\\"mopen\\\">‚åä</span><span class=\\\"mord\\\"><span class=\\\"mopen nulldelimiter\\\"></span><span class=\\\"mfrac\\\"><span class=\\\"vlist-t vlist-t2\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8801em;\\\"><span style=\\\"top:-2.655em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">2</span></span></span></span><span style=\\\"top:-3.23em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"frac-line\\\" style=\\\"border-bottom-width:0.04em;\\\"></span></span><span style=\\\"top:-3.394em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:3em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.01968em;\\\">l</span><span class=\\\"mbin mtight\\\">+</span><span class=\\\"mord mathnormal mtight\\\" style=\\\"margin-right:0.02778em;\\\">r</span><span class=\\\"mbin mtight\\\">+</span><span class=\\\"mord mtight\\\">1</span></span></span></span></span><span class=\\\"vlist-s\\\">‚Äã</span></span><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.345em;\\\"><span></span></span></span></span></span><span class=\\\"mclose nulldelimiter\\\"></span></span><span class=\\\"mclose\\\">‚åã</span></span></span></span>\"\n              }), \" will instead evaluate to \", _jsx(MATHSPAN, {\n                className: \"math math-inline\",\n                latex: \"r\",\n                children: \"<span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"><math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\\\"application/x-tex\\\">r</annotation></semantics></math></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.4306em;\\\"></span><span class=\\\"mord mathnormal\\\" style=\\\"margin-right:0.02778em;\\\">r</span></span></span></span>\"\n              }), \" which will break the loop.\"]\n            })\n          })]\n        })]\n      })]\n    })]\n  });\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, _props, {\n    children: _content\n  })) : _content;\n}\nreturn {\n  id,\n  redirects,\n  title,\n  author,\n  prerequisites,\n  description,\n  frequency,\n  default: MDXContent\n};\n","frontmatter":{"title":"Binary Search","author":"Darren Yao, Abutalib Namazov, Andrew Wang, Qi Wang, Dustin Miao","contributors":null,"id":"binary-search","prerequisites":["greedy-sorting"],"description":"Binary searching on arbitrary monotonic functions and built-in functions for binary search.","frequency":3},"parent":{"name":"Binary_Search","relativePath":"3_Silver/Binary_Search.mdx"},"fields":{"division":"silver"},"toc":{"cpp":[{"depth":2,"value":"Introduction","slug":"introduction"},{"depth":2,"value":"Binary Searching on Monotonic Functions","slug":"binary-searching-on-monotonic-functions"},{"depth":3,"value":"Finding The Maximum x Such That f(x) = true","slug":"finding-the-maximum-x-such-that-fx--true"},{"depth":4,"value":"Implementation 1","slug":"implementation-1"},{"depth":4,"value":"Implementation 2","slug":"implementation-2"},{"depth":3,"value":"Finding The Minimum x Such That f(x) = true","slug":"finding-the-minimum-x-such-that-fx--true"},{"depth":3,"value":"Example - Maximum Median","slug":"example---maximum-median"},{"depth":2,"value":"Common Mistakes","slug":"common-mistakes"},{"depth":3,"value":"Mistake 1 - Off By One","slug":"mistake-1---off-by-one"},{"depth":3,"value":"Mistake 2 - Not Accounting for Negative Bounds","slug":"mistake-2---not-accounting-for-negative-bounds"},{"depth":3,"value":"Mistake 3 - Integer Overflow","slug":"mistake-3---integer-overflow"},{"depth":2,"value":"Library Functions For Binary Search","slug":"library-functions-for-binary-search"},{"depth":3,"value":"Example - Counting Haybales","slug":"example---counting-haybales"},{"depth":3,"value":"With Built-in Function","slug":"with-built-in-function"},{"depth":3,"value":"Without Using Built-in Functions","slug":"without-using-built-in-functions"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":3,"value":"USACO","slug":"usaco"},{"depth":3,"value":"General","slug":"general"},{"depth":2,"value":"Quiz","slug":"quiz"}],"java":[{"depth":2,"value":"Introduction","slug":"introduction"},{"depth":2,"value":"Binary Searching on Monotonic Functions","slug":"binary-searching-on-monotonic-functions"},{"depth":3,"value":"Finding The Maximum x Such That f(x) = true","slug":"finding-the-maximum-x-such-that-fx--true"},{"depth":4,"value":"Implementation 1","slug":"implementation-1"},{"depth":4,"value":"Implementation 2","slug":"implementation-2"},{"depth":3,"value":"Finding The Minimum x Such That f(x) = true","slug":"finding-the-minimum-x-such-that-fx--true"},{"depth":3,"value":"Example - Maximum Median","slug":"example---maximum-median"},{"depth":2,"value":"Common Mistakes","slug":"common-mistakes"},{"depth":3,"value":"Mistake 1 - Off By One","slug":"mistake-1---off-by-one"},{"depth":3,"value":"Mistake 2 - Not Accounting for Negative Bounds","slug":"mistake-2---not-accounting-for-negative-bounds"},{"depth":3,"value":"Mistake 3 - Integer Overflow","slug":"mistake-3---integer-overflow"},{"depth":2,"value":"Library Functions For Binary Search","slug":"library-functions-for-binary-search"},{"depth":3,"value":"Example - Counting Haybales","slug":"example---counting-haybales"},{"depth":3,"value":"With Built-in Function","slug":"with-built-in-function"},{"depth":3,"value":"Without Using Built-in Functions","slug":"without-using-built-in-functions"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":3,"value":"USACO","slug":"usaco"},{"depth":3,"value":"General","slug":"general"},{"depth":2,"value":"Quiz","slug":"quiz"}],"py":[{"depth":2,"value":"Introduction","slug":"introduction"},{"depth":2,"value":"Binary Searching on Monotonic Functions","slug":"binary-searching-on-monotonic-functions"},{"depth":3,"value":"Finding The Maximum x Such That f(x) = true","slug":"finding-the-maximum-x-such-that-fx--true"},{"depth":4,"value":"Implementation 1","slug":"implementation-1"},{"depth":4,"value":"Implementation 2","slug":"implementation-2"},{"depth":3,"value":"Finding The Minimum x Such That f(x) = true","slug":"finding-the-minimum-x-such-that-fx--true"},{"depth":3,"value":"Example - Maximum Median","slug":"example---maximum-median"},{"depth":2,"value":"Common Mistakes","slug":"common-mistakes"},{"depth":3,"value":"Mistake 1 - Off By One","slug":"mistake-1---off-by-one"},{"depth":3,"value":"Mistake 2 - Not Accounting for Negative Bounds","slug":"mistake-2---not-accounting-for-negative-bounds"},{"depth":3,"value":"Mistake 3 - Integer Overflow","slug":"mistake-3---integer-overflow"},{"depth":2,"value":"Library Functions For Binary Search","slug":"library-functions-for-binary-search"},{"depth":3,"value":"Example - Counting Haybales","slug":"example---counting-haybales"},{"depth":3,"value":"With Built-in Function","slug":"with-built-in-function"},{"depth":3,"value":"Without Using Built-in Functions","slug":"without-using-built-in-functions"},{"depth":2,"value":"Problems","slug":"problems"},{"depth":3,"value":"USACO","slug":"usaco"},{"depth":3,"value":"General","slug":"general"},{"depth":2,"value":"Quiz","slug":"quiz"}]}},"moduleProblemLists":{"problemLists":[{"listId":"ex","problems":[{"uniqueId":"cf-1201C","name":"Div 2 C - Maximum Median","url":"https://codeforces.com/contest/1201/problem/C","source":"CF","difficulty":"Easy","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}}]},{"listId":"usaco","problems":[{"uniqueId":"usaco-690","name":"Cow Dance Show","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=690","source":"Silver","difficulty":"Easy","isStarred":false,"tags":["Binary Search","Sorted Set"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-858","name":"Convention","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=858","source":"Silver","difficulty":"Easy","isStarred":false,"tags":["Binary Search","Sorting"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-594","name":"Angry Cows","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=594","source":"Silver","difficulty":"Easy","isStarred":false,"tags":["Binary Search","Sorting"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-1038","name":"Social Distancing","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=1038","source":"Silver","difficulty":"Normal","isStarred":false,"tags":["Binary Search","Sorting"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-419","name":"Sabotage","url":"http://usaco.org/index.php?page=viewproblem2&cpid=419","source":"Gold","difficulty":"Normal","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_sabotage.html","sketch":null}},{"uniqueId":"usaco-597","name":"Angry Cows","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=597","source":"Gold","difficulty":"Hard","isStarred":true,"tags":["Binary Search","Sorting","2P","Greedy"],"solution":{"kind":"link","label":"External Sol","labelTooltip":null,"url":"http://www.usaco.org/current/data/sol_angry_gold_jan16.html","sketch":null}},{"uniqueId":"usaco-991","name":"Loan Repayment","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=991","source":"Silver","difficulty":"Very Hard","isStarred":false,"tags":["Binary Search","Sqrt"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"usaco-624","name":"Load Balancing","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=624","source":"Plat","difficulty":"Insane","isStarred":false,"tags":["Binary Search","Sorting"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]},{"listId":"count","problems":[{"uniqueId":"usaco-666","name":"Counting Haybales","url":"http://www.usaco.org/index.php?page=viewproblem2&cpid=666","source":"Silver","difficulty":"Easy","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]},{"listId":"general","problems":[{"uniqueId":"cf-702C","name":"Cellular Network","url":"https://codeforces.com/contest/702/problem/C","source":"CF","difficulty":"Easy","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-1620","name":"Factory Machines","url":"https://cses.fi/problemset/task/1620","source":"CSES","difficulty":"Easy","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cses-1085","name":"Array Division","url":"https://cses.fi/problemset/task/1085","source":"CSES","difficulty":"Easy","isStarred":true,"tags":["Binary Search"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"ceoi-12-JobScheduling","name":"2012 - Job Scheduling","url":"https://oj.uz/problem/view/CEOI12_jobs","source":"CEOI","difficulty":"Easy","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-1520F1","name":"Guess the K-th Zero (Easy)","url":"https://codeforces.com/contest/1520/problem/F1","source":"CF","difficulty":"Easy","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"cses-2422","name":"Multiplication Table","url":"https://cses.fi/problemset/task/2422","source":"CSES","difficulty":"Normal","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-1117C","name":"Edu C: Magic Ship","url":"https://codeforces.com/problemset/problem/1117/C","source":"CF","difficulty":"Normal","isStarred":true,"tags":["Binary Search","Prefix Sums"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-782B","name":"The Meeting Place Cannot Be Changed","url":"https://codeforces.com/contest/782/problem/B","source":"CF","difficulty":"Normal","isStarred":true,"tags":["Binary Search"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"cf-847B","name":"Preparing for Merge Sort","url":"https://codeforces.com/contest/847/problem/B","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-1223C","name":"Save the Nature","url":"https://codeforces.com/problemset/problem/1223/C","source":"CF","difficulty":"Normal","isStarred":false,"tags":["Binary Search","Sorting"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"ac-pond","name":"Pond","url":"https://atcoder.jp/contests/abc203/tasks/abc203_d?lang=en","source":"AC","difficulty":"Normal","isStarred":false,"tags":["Binary Search","Prefix Sums"],"solution":{"kind":"label","label":"Check AC","labelTooltip":"The editorial button is right next to the problem title. If \"there is no editorial yet,\" check the \"Overall Editorial\" PDF below.","url":null,"sketch":null}},{"uniqueId":"cf-1486D","name":"Max Median","url":"https://codeforces.com/problemset/problem/1486/D","source":"CF","difficulty":"Hard","isStarred":false,"tags":["Binary Search","Prefix Sums"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"cf-847E","name":"Packmen","url":"https://codeforces.com/contest/847/problem/E","source":"CF","difficulty":"Hard","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}},{"uniqueId":"cf-818F","name":"Level Generation","url":"https://codeforces.com/problemset/problem/818/F","source":"CF","difficulty":"Hard","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"label","label":"Check CF","labelTooltip":"Check contest materials, located to the right of the problem statement.","url":null,"sketch":null}},{"uniqueId":"baltic-12-mobile","name":"2012 - Mobile","url":"https://oj.uz/problem/view/BOI12_mobile","source":"Baltic OI","difficulty":"Very Hard","isStarred":false,"tags":["Binary Search"],"solution":{"kind":"internal","label":null,"labelTooltip":null,"url":null,"sketch":null}}]}]}},"pageContext":{"id":"binary-search"}},
    "staticQueryHashes": ["3245546052","3813215756","745520438"]}